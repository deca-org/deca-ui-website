import { ThemeContext } from '../Theme';
import { uuid, __DEV__, } from '../Utils';
import clsx from 'clsx';
import React, { useState, useMemo } from 'react';
import { StyledCheckboxWrapper, StyledCheckbox, StyledCheckboxLabel, } from './Checkbox.styles';
const Check = () => (React.createElement("svg", { viewBox: "0 0 512 512", "aria-hidden": "true", focusable: "false", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" },
    React.createElement("path", { fill: "currentColor", d: "m173.898 439.404-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z" })));
const Checkbox = React.forwardRef(({ size = 'md', label, className, name, disabled = false, as, css, color = 'primary', required = false, checked, initialCheck = false, onChange, value, ...props }, ref) => {
    const [selfChecked, setSelfChecked] = useState(initialCheck);
    const checkboxId = useMemo(() => {
        if (props.id) {
            return props.id;
        }
        else {
            return uuid();
        }
    }, [props.id]);
    const isControlledComponent = useMemo(() => checked !== undefined, [checked]);
    const changeHandler = (e) => {
        if (disabled)
            return;
        if (!isControlledComponent) {
            setSelfChecked(e.target.checked);
        }
        onChange && onChange(e);
    };
    const preClass = 'decaCheckbox';
    const { dark } = React.useContext(ThemeContext);
    return (React.createElement(StyledCheckboxWrapper, { className: clsx(className, `${preClass}-root`) },
        React.createElement(StyledCheckbox, { id: checkboxId, type: "checkbox", onChange: changeHandler, checked: isControlledComponent ? checked : selfChecked, ref: ref, required: required, className: `${preClass}-input`, name: name, size: size, color: color, disabled: disabled, isDisabled: disabled, value: value, isDark: dark, ...props }),
        React.createElement(StyledCheckboxLabel, { htmlFor: checkboxId, css: css, size: size, as: as, color: color, isDisabled: disabled, hasLabel: label ? true : false, isDark: dark },
            React.createElement(Check, null),
            label && label)));
});
if (__DEV__) {
    Checkbox.displayName = 'DecaUI.Checkbox';
}
export default Checkbox;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hlY2tib3guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL0NoZWNrYm94L0NoZWNrYm94LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTFDLE9BQU8sRUFJTCxJQUFJLEVBQ0osT0FBTyxHQUVSLE1BQU0sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLEtBQUssRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFHakQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsbUJBQW1CLEdBQ3BCLE1BQU0sbUJBQW1CLENBQUM7QUEyRTNCLE1BQU0sS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQ2xCLDZCQUNFLE9BQU8sRUFBQyxhQUFhLGlCQUNULE1BQU0sRUFDbEIsU0FBUyxFQUFDLE9BQU8sRUFDakIsSUFBSSxFQUFDLGNBQWMsRUFDbkIsS0FBSyxFQUFDLDRCQUE0QjtJQUVsQyw4QkFDRSxJQUFJLEVBQUMsY0FBYyxFQUNuQixDQUFDLEVBQUMsbVJBQW1SLEdBQy9RLENBQ0osQ0FDUCxDQUFDO0FBU0YsTUFBTSxRQUFRLEdBQXNCLEtBQUssQ0FBQyxVQUFVLENBQ2xELENBQ0UsRUFDRSxJQUFJLEdBQUcsSUFBSSxFQUNYLEtBQUssRUFDTCxTQUFTLEVBQ1QsSUFBSSxFQUNKLFFBQVEsR0FBRyxLQUFLLEVBQ2hCLEVBQUUsRUFDRixHQUFHLEVBQ0gsS0FBSyxHQUFHLFNBQVMsRUFDakIsUUFBUSxHQUFHLEtBQUssRUFDaEIsT0FBTyxFQUNQLFlBQVksR0FBRyxLQUFLLEVBQ3BCLFFBQVEsRUFDUixLQUFLLEVBQ0wsR0FBRyxLQUFLLEVBQ1MsRUFDbkIsR0FBdUIsRUFDdkIsRUFBRTtJQUNGLE1BQU0sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLEdBQUcsUUFBUSxDQUFVLFlBQVksQ0FBQyxDQUFDO0lBRXRFLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFDOUIsSUFBSSxLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ1osT0FBTyxLQUFLLENBQUMsRUFBRSxDQUFDO1NBQ2pCO2FBQU07WUFDTCxPQUFPLElBQUksRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVmLE1BQU0scUJBQXFCLEdBQUcsT0FBTyxDQUNuQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUMzQixDQUFDLE9BQU8sQ0FBQyxDQUNWLENBQUM7SUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLENBQXNDLEVBQUUsRUFBRTtRQUMvRCxJQUFJLFFBQVE7WUFBRSxPQUFPO1FBQ3JCLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUMxQixjQUFjLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNsQztRQUNELFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQyxDQUFDO0lBRUYsTUFBTSxRQUFRLEdBQUcsY0FBYyxDQUFDO0lBRWhDLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBRWhELE9BQU8sQ0FDTCxvQkFBQyxxQkFBcUIsSUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxHQUFHLFFBQVEsT0FBTyxDQUFDO1FBQ25FLG9CQUFDLGNBQWMsSUFDYixFQUFFLEVBQUUsVUFBVSxFQUNkLElBQUksRUFBQyxVQUFVLEVBQ2YsUUFBUSxFQUFFLGFBQWEsRUFDdkIsT0FBTyxFQUFFLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFDdEQsR0FBRyxFQUFFLEdBQUcsRUFDUixRQUFRLEVBQUUsUUFBUSxFQUNsQixTQUFTLEVBQUUsR0FBRyxRQUFRLFFBQVEsRUFDOUIsSUFBSSxFQUFFLElBQUksRUFDVixJQUFJLEVBQUUsSUFBSSxFQUNWLEtBQUssRUFBRSxLQUFLLEVBQ1osUUFBUSxFQUFFLFFBQVEsRUFDbEIsVUFBVSxFQUFFLFFBQVEsRUFDcEIsS0FBSyxFQUFFLEtBQUssRUFDWixNQUFNLEVBQUUsSUFBSSxLQUNSLEtBQUssR0FDVDtRQUNGLG9CQUFDLG1CQUFtQixJQUNsQixPQUFPLEVBQUUsVUFBVSxFQUNuQixHQUFHLEVBQUUsR0FBRyxFQUNSLElBQUksRUFBRSxJQUFJLEVBQ1YsRUFBRSxFQUFFLEVBQVMsRUFDYixLQUFLLEVBQUUsS0FBSyxFQUNaLFVBQVUsRUFBRSxRQUFRLEVBQ3BCLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUM5QixNQUFNLEVBQUUsSUFBSTtZQUVaLG9CQUFDLEtBQUssT0FBRztZQUNSLEtBQUssSUFBSSxLQUFLLENBQ0ssQ0FDQSxDQUN6QixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUM7QUFFRixJQUFJLE9BQU8sRUFBRTtJQUNYLFFBQVEsQ0FBQyxXQUFXLEdBQUcsaUJBQWlCLENBQUM7Q0FDMUM7QUFFRCxlQUFlLFFBSWQsQ0FBQyJ9