export declare const StyledContainer: import("@stitches/react/types/styled-component").StyledComponent<"div", {
    px?: "none" | "sm" | "md" | "lg" | undefined;
    responsive?: boolean | "true" | undefined;
    fluid?: boolean | "true" | undefined;
}, {
    n: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    dark: string;
}, import("@stitches/react/types/css-util").CSS<{
    n: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    dark: string;
}, {
    colors: {
        text: string;
        primary: string;
        'primary-darken-1': string;
        'primary-darken-2': string;
        'primary-darken-3': string;
        'primary-darken-4': string;
        'primary-lighten-1': string;
        'primary-lighten-2': string;
        'primary-lighten-3': string;
        'primary-lighten-4': string;
        'primary-lighten-5': string;
        'primary-lighten-6': string;
        'primary-lighten-7': string;
        'primary-lighten-8': string;
        'primary-readable': string;
        secondary: string;
        'secondary-darken-1': string;
        'secondary-darken-2': string;
        'secondary-darken-3': string;
        'secondary-darken-4': string;
        'secondary-lighten-1': string;
        'secondary-lighten-2': string;
        'secondary-lighten-3': string;
        'secondary-lighten-4': string;
        'secondary-lighten-5': string;
        'secondary-lighten-6': string;
        'secondary-lighten-7': string;
        'secondary-lighten-8': string;
        'secondary-readable': string;
        success: string;
        'success-darken-1': string;
        'success-darken-2': string;
        'success-darken-3': string;
        'success-darken-4': string;
        'success-lighten-1': string;
        'success-lighten-2': string;
        'success-lighten-3': string;
        'success-lighten-4': string;
        'success-lighten-5': string;
        'success-lighten-6': string;
        'success-lighten-7': string;
        'success-lighten-8': string;
        'success-readable': string;
        warning: string;
        'warning-darken-1': string;
        'warning-darken-2': string;
        'warning-darken-3': string;
        'warning-darken-4': string;
        'warning-lighten-1': string;
        'warning-lighten-2': string;
        'warning-lighten-3': string;
        'warning-lighten-4': string;
        'warning-lighten-5': string;
        'warning-lighten-6': string;
        'warning-lighten-7': string;
        'warning-lighten-8': string;
        'warning-readable': string;
        error: string;
        'error-darken-1': string;
        'error-darken-2': string;
        'error-darken-3': string;
        'error-darken-4': string;
        'error-lighten-1': string;
        'error-lighten-2': string;
        'error-lighten-3': string;
        'error-lighten-4': string;
        'error-lighten-5': string;
        'error-lighten-6': string;
        'error-lighten-7': string;
        'error-lighten-8': string;
        'error-readable': string;
        neutral: string;
        black: string;
        white: string;
        popperDarkBg: string;
        popperLightBg: string;
        transparent: string;
        brown900: string;
        brown800: string;
        brown700: string;
        brown600: string;
        brown500: string;
        brown400: string;
        brown300: string;
        brown200: string;
        brown100: string;
        brown50: string;
        blueGray900: string;
        blueGray800: string;
        blueGray700: string;
        blueGray600: string;
        blueGray500: string;
        blueGray400: string;
        blueGray300: string;
        blueGray200: string;
        blueGray100: string;
        blueGray50: string;
        gray900: string;
        gray800: string;
        gray700: string;
        gray600: string;
        gray500: string;
        gray400: string;
        gray300: string;
        gray200: string;
        gray100: string;
        gray50: string;
        deepOrange900: string;
        deepOrange800: string;
        deepOrange700: string;
        deepOrange600: string;
        deepOrange500: string;
        deepOrange400: string;
        deepOrange300: string;
        deepOrange200: string;
        deepOrange100: string;
        deepOrange50: string;
        orange900: string;
        orange800: string;
        orange700: string;
        orange600: string;
        orange500: string;
        orange400: string;
        orange300: string;
        orange200: string;
        orange100: string;
        orange50: string;
        amber900: string;
        amber800: string;
        amber700: string;
        amber600: string;
        amber500: string;
        amber400: string;
        amber300: string;
        amber200: string;
        amber100: string;
        amber50: string;
        yellow900: string;
        yellow800: string;
        yellow700: string;
        yellow600: string;
        yellow500: string;
        yellow400: string;
        yellow300: string;
        yellow200: string;
        yellow100: string;
        yellow50: string;
        lime900: string;
        lime800: string;
        lime700: string;
        lime600: string;
        lime500: string;
        lime400: string;
        lime300: string;
        lime200: string;
        lime100: string;
        lime50: string;
        lightGreen900: string;
        lightGreen800: string;
        lightGreen700: string;
        lightGreen600: string;
        lightGreen500: string;
        lightGreen400: string;
        lightGreen300: string;
        lightGreen200: string;
        lightGreen100: string;
        lightGreen50: string;
        green900: string;
        green800: string;
        green700: string;
        green600: string;
        green500: string;
        green400: string;
        green300: string;
        green200: string;
        green100: string;
        green50: string;
        teal900: string;
        teal800: string;
        teal700: string;
        teal600: string;
        teal500: string;
        teal400: string;
        teal300: string;
        teal200: string;
        teal100: string;
        teal50: string;
        cyan900: string;
        cyan800: string;
        cyan700: string;
        cyan600: string;
        cyan500: string;
        cyan400: string;
        cyan300: string;
        cyan200: string;
        cyan100: string;
        cyan50: string;
        blue900: string;
        blue800: string;
        blue700: string;
        blue600: string;
        blue500: string;
        blue400: string;
        blue300: string;
        blue200: string;
        blue100: string;
        blue50: string;
        indigo900: string;
        indigo800: string;
        indigo700: string;
        indigo600: string;
        indigo500: string;
        indigo400: string;
        indigo300: string;
        indigo200: string;
        indigo100: string;
        indigo50: string;
        purple900: string;
        purple800: string;
        purple700: string;
        purple600: string;
        purple500: string;
        purple400: string;
        purple300: string;
        purple200: string;
        purple100: string;
        purple50: string;
        violet900: string;
        violet800: string;
        violet700: string;
        violet600: string;
        violet500: string;
        violet400: string;
        violet300: string;
        violet200: string;
        violet100: string;
        violet50: string;
        grape900: string;
        grape800: string;
        grape700: string;
        grape600: string;
        grape500: string;
        grape400: string;
        grape300: string;
        grape200: string;
        grape100: string;
        grape50: string;
        pink900: string;
        pink800: string;
        pink700: string;
        pink600: string;
        pink500: string;
        pink400: string;
        pink300: string;
        pink200: string;
        pink100: string;
        pink50: string;
        red900: string;
        red800: string;
        red700: string;
        red600: string;
        red500: string;
        red400: string;
        red300: string;
        red200: string;
        red100: string;
        red50: string;
    };
    space: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
    };
    sizes: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
        21: string;
        22: string;
        23: string;
        24: string;
        25: string;
        26: string;
        27: string;
        28: string;
        29: string;
        30: string;
        31: string;
        32: string;
        33: string;
        34: string;
        35: string;
        36: string;
    };
    fontSizes: {
        h1: string;
        h2: string;
        h3: string;
        h4: string;
        h5: string;
        h6: string;
        body: string;
        bodySm: string;
        caption: string;
        footnote: string;
    };
    fonts: {
        normal: string;
        mono: string;
    };
    fontWeights: {
        hairline: number;
        thin: number;
        light: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        extrabold: number;
        black: number;
    };
    lineHeights: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    letterSpacings: {
        tighter: string;
        tight: string;
        normal: string;
        wide: string;
        wider: string;
        widest: string;
    };
    borderWidths: {
        light: string;
        normal: string;
        bold: string;
        extrabold: string;
        black: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        squared: string;
        rounded: string;
        pill: string;
    };
    shadows: {
        default: string;
        a11y: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        10: string;
        max: string;
    };
    transitions: {
        default: string;
    };
    breakpoints: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: import("@stitches/react/types/css-util").WithPropertyValue<"margin">) => {
        margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
    };
    mt: (value: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">) => {
        marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
    };
    mr: (value: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">) => {
        marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
    };
    mb: (value: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">) => {
        marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
    };
    ml: (value: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">) => {
        marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
    };
    mx: (value: import("@stitches/react/types/css-util").WithScaleValue<"space">) => {
        marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    my: (value: import("@stitches/react/types/css-util").WithScaleValue<"space">) => {
        marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    p: (value: import("@stitches/react/types/css-util").WithPropertyValue<"padding">) => {
        padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
    };
    pt: (value: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">) => {
        paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
    };
    pr: (value: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">) => {
        paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
    };
    pb: (value: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">) => {
        paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
    };
    pl: (value: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">) => {
        paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
    };
    px: (value: import("@stitches/react/types/css-util").WithScaleValue<"space">) => {
        paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    py: (value: import("@stitches/react/types/css-util").WithScaleValue<"space">) => {
        paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    bg: (value: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">) => {
        backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
    };
    size: (value: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">) => {
        width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
    };
    linearGradient: (value: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundImage">) => {
        backgroundImage: string;
    };
    br: (value: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">) => {
        borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
    };
    dflex: (value: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">) => {
        display: string;
        justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
    };
}>>;
