import type * as Stitches from '@stitches/react';
export declare const baseTheme: {
    theme: {
        colors: {
            text: string;
            primary: string;
            'primary-darken-1': string;
            'primary-darken-2': string;
            'primary-darken-3': string;
            'primary-darken-4': string;
            'primary-lighten-1': string;
            'primary-lighten-2': string;
            'primary-lighten-3': string;
            'primary-lighten-4': string;
            'primary-lighten-5': string;
            'primary-lighten-6': string;
            'primary-lighten-7': string;
            'primary-lighten-8': string;
            'primary-readable': string;
            secondary: string;
            'secondary-darken-1': string;
            'secondary-darken-2': string;
            'secondary-darken-3': string;
            'secondary-darken-4': string;
            'secondary-lighten-1': string;
            'secondary-lighten-2': string;
            'secondary-lighten-3': string;
            'secondary-lighten-4': string;
            'secondary-lighten-5': string;
            'secondary-lighten-6': string;
            'secondary-lighten-7': string;
            'secondary-lighten-8': string;
            'secondary-readable': string;
            success: string;
            'success-darken-1': string;
            'success-darken-2': string;
            'success-darken-3': string;
            'success-darken-4': string;
            'success-lighten-1': string;
            'success-lighten-2': string;
            'success-lighten-3': string;
            'success-lighten-4': string;
            'success-lighten-5': string;
            'success-lighten-6': string;
            'success-lighten-7': string;
            'success-lighten-8': string;
            'success-readable': string;
            warning: string;
            'warning-darken-1': string;
            'warning-darken-2': string;
            'warning-darken-3': string;
            'warning-darken-4': string;
            'warning-lighten-1': string;
            'warning-lighten-2': string;
            'warning-lighten-3': string;
            'warning-lighten-4': string;
            'warning-lighten-5': string;
            'warning-lighten-6': string;
            'warning-lighten-7': string;
            'warning-lighten-8': string;
            'warning-readable': string;
            error: string;
            'error-darken-1': string;
            'error-darken-2': string;
            'error-darken-3': string;
            'error-darken-4': string;
            'error-lighten-1': string;
            'error-lighten-2': string;
            'error-lighten-3': string;
            'error-lighten-4': string;
            'error-lighten-5': string;
            'error-lighten-6': string;
            'error-lighten-7': string;
            'error-lighten-8': string;
            'error-readable': string;
            neutral: string;
            black: string;
            white: string;
            popperDarkBg: string;
            popperLightBg: string;
            transparent: string;
            brown900: string;
            brown800: string;
            brown700: string;
            brown600: string;
            brown500: string;
            brown400: string;
            brown300: string;
            brown200: string;
            brown100: string;
            brown50: string;
            blueGray900: string;
            blueGray800: string;
            blueGray700: string;
            blueGray600: string;
            blueGray500: string;
            blueGray400: string;
            blueGray300: string;
            blueGray200: string;
            blueGray100: string;
            blueGray50: string;
            gray900: string;
            gray800: string;
            gray700: string;
            gray600: string;
            gray500: string;
            gray400: string;
            gray300: string;
            gray200: string;
            gray100: string;
            gray50: string;
            deepOrange900: string;
            deepOrange800: string;
            deepOrange700: string;
            deepOrange600: string;
            deepOrange500: string;
            deepOrange400: string;
            deepOrange300: string;
            deepOrange200: string;
            deepOrange100: string;
            deepOrange50: string;
            orange900: string;
            orange800: string;
            orange700: string;
            orange600: string;
            orange500: string;
            orange400: string;
            orange300: string;
            orange200: string;
            orange100: string;
            orange50: string;
            amber900: string;
            amber800: string;
            amber700: string;
            amber600: string;
            amber500: string;
            amber400: string;
            amber300: string;
            amber200: string;
            amber100: string;
            amber50: string;
            yellow900: string;
            yellow800: string;
            yellow700: string;
            yellow600: string;
            yellow500: string;
            yellow400: string;
            yellow300: string;
            yellow200: string;
            yellow100: string;
            yellow50: string;
            lime900: string;
            lime800: string;
            lime700: string;
            lime600: string;
            lime500: string;
            lime400: string;
            lime300: string;
            lime200: string;
            lime100: string;
            lime50: string;
            lightGreen900: string;
            lightGreen800: string;
            lightGreen700: string;
            lightGreen600: string;
            lightGreen500: string;
            lightGreen400: string;
            lightGreen300: string;
            lightGreen200: string;
            lightGreen100: string;
            lightGreen50: string;
            green900: string;
            green800: string;
            green700: string;
            green600: string;
            green500: string;
            green400: string;
            green300: string;
            green200: string;
            green100: string;
            green50: string;
            teal900: string;
            teal800: string;
            teal700: string;
            teal600: string;
            teal500: string;
            teal400: string;
            teal300: string;
            teal200: string;
            teal100: string;
            teal50: string;
            cyan900: string;
            cyan800: string;
            cyan700: string;
            cyan600: string;
            cyan500: string;
            cyan400: string;
            cyan300: string;
            cyan200: string;
            cyan100: string;
            cyan50: string;
            blue900: string;
            blue800: string;
            blue700: string;
            blue600: string;
            blue500: string;
            blue400: string;
            blue300: string;
            blue200: string;
            blue100: string;
            blue50: string;
            indigo900: string;
            indigo800: string;
            indigo700: string;
            indigo600: string;
            indigo500: string;
            indigo400: string;
            indigo300: string;
            indigo200: string;
            indigo100: string;
            indigo50: string;
            purple900: string;
            purple800: string;
            purple700: string;
            purple600: string;
            purple500: string;
            purple400: string;
            purple300: string;
            purple200: string;
            purple100: string;
            purple50: string;
            violet900: string;
            violet800: string;
            violet700: string;
            violet600: string;
            violet500: string;
            violet400: string;
            violet300: string;
            violet200: string;
            violet100: string;
            violet50: string;
            grape900: string;
            grape800: string;
            grape700: string;
            grape600: string;
            grape500: string;
            grape400: string;
            grape300: string;
            grape200: string;
            grape100: string;
            grape50: string;
            pink900: string;
            pink800: string;
            pink700: string;
            pink600: string;
            pink500: string;
            pink400: string;
            pink300: string;
            pink200: string;
            pink100: string;
            pink50: string;
            red900: string;
            red800: string;
            red700: string;
            red600: string;
            red500: string;
            red400: string;
            red300: string;
            red200: string;
            red100: string;
            red50: string;
        };
        space: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
        };
        sizes: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
            13: string;
            14: string;
            15: string;
            16: string;
            17: string;
            18: string;
            19: string;
            20: string;
            21: string;
            22: string;
            23: string;
            24: string;
            25: string;
            26: string;
            27: string;
            28: string;
            29: string;
            30: string;
            31: string;
            32: string;
            33: string;
            34: string;
            35: string;
            36: string;
        };
        fontSizes: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            body: string;
            bodySm: string;
            caption: string;
            footnote: string;
        };
        fonts: {
            normal: string;
            mono: string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        borderWidths: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        radii: {
            xs: string;
            sm: string;
            md: string;
            base: string;
            lg: string;
            xl: string;
            squared: string;
            rounded: string;
            pill: string;
        };
        shadows: {
            default: string;
            a11y: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            10: string;
            max: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            n: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    media: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xsMax: string;
        smMax: string;
        mdMax: string;
        lgMax: string;
        xlMax: string;
        dark: string;
    };
    utils: {
        m: (value: Stitches.PropertyValue<'margin'>) => {
            margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
        };
        mt: (value: Stitches.PropertyValue<'marginTop'>) => {
            marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
        };
        mr: (value: Stitches.PropertyValue<'marginRight'>) => {
            marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
        };
        mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
            marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
        };
        ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
        };
        mx: (value: Stitches.ScaleValue<'space'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        my: (value: Stitches.ScaleValue<'space'>) => {
            marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        p: (value: Stitches.PropertyValue<'padding'>) => {
            padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
        };
        pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
        };
        pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
            paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
        };
        pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
            paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
        };
        pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
        };
        px: (value: Stitches.ScaleValue<'space'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        py: (value: Stitches.ScaleValue<'space'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
            backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
        };
        size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
            width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
            height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        };
        linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
            backgroundImage: string;
        };
        br: (value: Stitches.PropertyValue<'borderRadius'>) => {
            borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
        };
        dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
            display: string;
            justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
            alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        };
    };
};
export declare const createTheme: <Argument0 extends string | ({
    colors?: {
        text?: string | number | boolean | undefined;
        primary?: string | number | boolean | undefined;
        'primary-darken-1'?: string | number | boolean | undefined;
        'primary-darken-2'?: string | number | boolean | undefined;
        'primary-darken-3'?: string | number | boolean | undefined;
        'primary-darken-4'?: string | number | boolean | undefined;
        'primary-lighten-1'?: string | number | boolean | undefined;
        'primary-lighten-2'?: string | number | boolean | undefined;
        'primary-lighten-3'?: string | number | boolean | undefined;
        'primary-lighten-4'?: string | number | boolean | undefined;
        'primary-lighten-5'?: string | number | boolean | undefined;
        'primary-lighten-6'?: string | number | boolean | undefined;
        'primary-lighten-7'?: string | number | boolean | undefined;
        'primary-lighten-8'?: string | number | boolean | undefined;
        'primary-readable'?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
        'secondary-darken-1'?: string | number | boolean | undefined;
        'secondary-darken-2'?: string | number | boolean | undefined;
        'secondary-darken-3'?: string | number | boolean | undefined;
        'secondary-darken-4'?: string | number | boolean | undefined;
        'secondary-lighten-1'?: string | number | boolean | undefined;
        'secondary-lighten-2'?: string | number | boolean | undefined;
        'secondary-lighten-3'?: string | number | boolean | undefined;
        'secondary-lighten-4'?: string | number | boolean | undefined;
        'secondary-lighten-5'?: string | number | boolean | undefined;
        'secondary-lighten-6'?: string | number | boolean | undefined;
        'secondary-lighten-7'?: string | number | boolean | undefined;
        'secondary-lighten-8'?: string | number | boolean | undefined;
        'secondary-readable'?: string | number | boolean | undefined;
        success?: string | number | boolean | undefined;
        'success-darken-1'?: string | number | boolean | undefined;
        'success-darken-2'?: string | number | boolean | undefined;
        'success-darken-3'?: string | number | boolean | undefined;
        'success-darken-4'?: string | number | boolean | undefined;
        'success-lighten-1'?: string | number | boolean | undefined;
        'success-lighten-2'?: string | number | boolean | undefined;
        'success-lighten-3'?: string | number | boolean | undefined;
        'success-lighten-4'?: string | number | boolean | undefined;
        'success-lighten-5'?: string | number | boolean | undefined;
        'success-lighten-6'?: string | number | boolean | undefined;
        'success-lighten-7'?: string | number | boolean | undefined;
        'success-lighten-8'?: string | number | boolean | undefined;
        'success-readable'?: string | number | boolean | undefined;
        warning?: string | number | boolean | undefined;
        'warning-darken-1'?: string | number | boolean | undefined;
        'warning-darken-2'?: string | number | boolean | undefined;
        'warning-darken-3'?: string | number | boolean | undefined;
        'warning-darken-4'?: string | number | boolean | undefined;
        'warning-lighten-1'?: string | number | boolean | undefined;
        'warning-lighten-2'?: string | number | boolean | undefined;
        'warning-lighten-3'?: string | number | boolean | undefined;
        'warning-lighten-4'?: string | number | boolean | undefined;
        'warning-lighten-5'?: string | number | boolean | undefined;
        'warning-lighten-6'?: string | number | boolean | undefined;
        'warning-lighten-7'?: string | number | boolean | undefined;
        'warning-lighten-8'?: string | number | boolean | undefined;
        'warning-readable'?: string | number | boolean | undefined;
        error?: string | number | boolean | undefined;
        'error-darken-1'?: string | number | boolean | undefined;
        'error-darken-2'?: string | number | boolean | undefined;
        'error-darken-3'?: string | number | boolean | undefined;
        'error-darken-4'?: string | number | boolean | undefined;
        'error-lighten-1'?: string | number | boolean | undefined;
        'error-lighten-2'?: string | number | boolean | undefined;
        'error-lighten-3'?: string | number | boolean | undefined;
        'error-lighten-4'?: string | number | boolean | undefined;
        'error-lighten-5'?: string | number | boolean | undefined;
        'error-lighten-6'?: string | number | boolean | undefined;
        'error-lighten-7'?: string | number | boolean | undefined;
        'error-lighten-8'?: string | number | boolean | undefined;
        'error-readable'?: string | number | boolean | undefined;
        neutral?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
        white?: string | number | boolean | undefined;
        popperDarkBg?: string | number | boolean | undefined;
        popperLightBg?: string | number | boolean | undefined;
        transparent?: string | number | boolean | undefined;
        brown900?: string | number | boolean | undefined;
        brown800?: string | number | boolean | undefined;
        brown700?: string | number | boolean | undefined;
        brown600?: string | number | boolean | undefined;
        brown500?: string | number | boolean | undefined;
        brown400?: string | number | boolean | undefined;
        brown300?: string | number | boolean | undefined;
        brown200?: string | number | boolean | undefined;
        brown100?: string | number | boolean | undefined;
        brown50?: string | number | boolean | undefined;
        blueGray900?: string | number | boolean | undefined;
        blueGray800?: string | number | boolean | undefined;
        blueGray700?: string | number | boolean | undefined;
        blueGray600?: string | number | boolean | undefined;
        blueGray500?: string | number | boolean | undefined;
        blueGray400?: string | number | boolean | undefined;
        blueGray300?: string | number | boolean | undefined;
        blueGray200?: string | number | boolean | undefined;
        blueGray100?: string | number | boolean | undefined;
        blueGray50?: string | number | boolean | undefined;
        gray900?: string | number | boolean | undefined;
        gray800?: string | number | boolean | undefined;
        gray700?: string | number | boolean | undefined;
        gray600?: string | number | boolean | undefined;
        gray500?: string | number | boolean | undefined;
        gray400?: string | number | boolean | undefined;
        gray300?: string | number | boolean | undefined;
        gray200?: string | number | boolean | undefined;
        gray100?: string | number | boolean | undefined;
        gray50?: string | number | boolean | undefined;
        deepOrange900?: string | number | boolean | undefined;
        deepOrange800?: string | number | boolean | undefined;
        deepOrange700?: string | number | boolean | undefined;
        deepOrange600?: string | number | boolean | undefined;
        deepOrange500?: string | number | boolean | undefined;
        deepOrange400?: string | number | boolean | undefined;
        deepOrange300?: string | number | boolean | undefined;
        deepOrange200?: string | number | boolean | undefined;
        deepOrange100?: string | number | boolean | undefined;
        deepOrange50?: string | number | boolean | undefined;
        orange900?: string | number | boolean | undefined;
        orange800?: string | number | boolean | undefined;
        orange700?: string | number | boolean | undefined;
        orange600?: string | number | boolean | undefined;
        orange500?: string | number | boolean | undefined;
        orange400?: string | number | boolean | undefined;
        orange300?: string | number | boolean | undefined;
        orange200?: string | number | boolean | undefined;
        orange100?: string | number | boolean | undefined;
        orange50?: string | number | boolean | undefined;
        amber900?: string | number | boolean | undefined;
        amber800?: string | number | boolean | undefined;
        amber700?: string | number | boolean | undefined;
        amber600?: string | number | boolean | undefined;
        amber500?: string | number | boolean | undefined;
        amber400?: string | number | boolean | undefined;
        amber300?: string | number | boolean | undefined;
        amber200?: string | number | boolean | undefined;
        amber100?: string | number | boolean | undefined;
        amber50?: string | number | boolean | undefined;
        yellow900?: string | number | boolean | undefined;
        yellow800?: string | number | boolean | undefined;
        yellow700?: string | number | boolean | undefined;
        yellow600?: string | number | boolean | undefined;
        yellow500?: string | number | boolean | undefined;
        yellow400?: string | number | boolean | undefined;
        yellow300?: string | number | boolean | undefined;
        yellow200?: string | number | boolean | undefined;
        yellow100?: string | number | boolean | undefined;
        yellow50?: string | number | boolean | undefined;
        lime900?: string | number | boolean | undefined;
        lime800?: string | number | boolean | undefined;
        lime700?: string | number | boolean | undefined;
        lime600?: string | number | boolean | undefined;
        lime500?: string | number | boolean | undefined;
        lime400?: string | number | boolean | undefined;
        lime300?: string | number | boolean | undefined;
        lime200?: string | number | boolean | undefined;
        lime100?: string | number | boolean | undefined;
        lime50?: string | number | boolean | undefined;
        lightGreen900?: string | number | boolean | undefined;
        lightGreen800?: string | number | boolean | undefined;
        lightGreen700?: string | number | boolean | undefined;
        lightGreen600?: string | number | boolean | undefined;
        lightGreen500?: string | number | boolean | undefined;
        lightGreen400?: string | number | boolean | undefined;
        lightGreen300?: string | number | boolean | undefined;
        lightGreen200?: string | number | boolean | undefined;
        lightGreen100?: string | number | boolean | undefined;
        lightGreen50?: string | number | boolean | undefined;
        green900?: string | number | boolean | undefined;
        green800?: string | number | boolean | undefined;
        green700?: string | number | boolean | undefined;
        green600?: string | number | boolean | undefined;
        green500?: string | number | boolean | undefined;
        green400?: string | number | boolean | undefined;
        green300?: string | number | boolean | undefined;
        green200?: string | number | boolean | undefined;
        green100?: string | number | boolean | undefined;
        green50?: string | number | boolean | undefined;
        teal900?: string | number | boolean | undefined;
        teal800?: string | number | boolean | undefined;
        teal700?: string | number | boolean | undefined;
        teal600?: string | number | boolean | undefined;
        teal500?: string | number | boolean | undefined;
        teal400?: string | number | boolean | undefined;
        teal300?: string | number | boolean | undefined;
        teal200?: string | number | boolean | undefined;
        teal100?: string | number | boolean | undefined;
        teal50?: string | number | boolean | undefined;
        cyan900?: string | number | boolean | undefined;
        cyan800?: string | number | boolean | undefined;
        cyan700?: string | number | boolean | undefined;
        cyan600?: string | number | boolean | undefined;
        cyan500?: string | number | boolean | undefined;
        cyan400?: string | number | boolean | undefined;
        cyan300?: string | number | boolean | undefined;
        cyan200?: string | number | boolean | undefined;
        cyan100?: string | number | boolean | undefined;
        cyan50?: string | number | boolean | undefined;
        blue900?: string | number | boolean | undefined;
        blue800?: string | number | boolean | undefined;
        blue700?: string | number | boolean | undefined;
        blue600?: string | number | boolean | undefined;
        blue500?: string | number | boolean | undefined;
        blue400?: string | number | boolean | undefined;
        blue300?: string | number | boolean | undefined;
        blue200?: string | number | boolean | undefined;
        blue100?: string | number | boolean | undefined;
        blue50?: string | number | boolean | undefined;
        indigo900?: string | number | boolean | undefined;
        indigo800?: string | number | boolean | undefined;
        indigo700?: string | number | boolean | undefined;
        indigo600?: string | number | boolean | undefined;
        indigo500?: string | number | boolean | undefined;
        indigo400?: string | number | boolean | undefined;
        indigo300?: string | number | boolean | undefined;
        indigo200?: string | number | boolean | undefined;
        indigo100?: string | number | boolean | undefined;
        indigo50?: string | number | boolean | undefined;
        purple900?: string | number | boolean | undefined;
        purple800?: string | number | boolean | undefined;
        purple700?: string | number | boolean | undefined;
        purple600?: string | number | boolean | undefined;
        purple500?: string | number | boolean | undefined;
        purple400?: string | number | boolean | undefined;
        purple300?: string | number | boolean | undefined;
        purple200?: string | number | boolean | undefined;
        purple100?: string | number | boolean | undefined;
        purple50?: string | number | boolean | undefined;
        violet900?: string | number | boolean | undefined;
        violet800?: string | number | boolean | undefined;
        violet700?: string | number | boolean | undefined;
        violet600?: string | number | boolean | undefined;
        violet500?: string | number | boolean | undefined;
        violet400?: string | number | boolean | undefined;
        violet300?: string | number | boolean | undefined;
        violet200?: string | number | boolean | undefined;
        violet100?: string | number | boolean | undefined;
        violet50?: string | number | boolean | undefined;
        grape900?: string | number | boolean | undefined;
        grape800?: string | number | boolean | undefined;
        grape700?: string | number | boolean | undefined;
        grape600?: string | number | boolean | undefined;
        grape500?: string | number | boolean | undefined;
        grape400?: string | number | boolean | undefined;
        grape300?: string | number | boolean | undefined;
        grape200?: string | number | boolean | undefined;
        grape100?: string | number | boolean | undefined;
        grape50?: string | number | boolean | undefined;
        pink900?: string | number | boolean | undefined;
        pink800?: string | number | boolean | undefined;
        pink700?: string | number | boolean | undefined;
        pink600?: string | number | boolean | undefined;
        pink500?: string | number | boolean | undefined;
        pink400?: string | number | boolean | undefined;
        pink300?: string | number | boolean | undefined;
        pink200?: string | number | boolean | undefined;
        pink100?: string | number | boolean | undefined;
        pink50?: string | number | boolean | undefined;
        red900?: string | number | boolean | undefined;
        red800?: string | number | boolean | undefined;
        red700?: string | number | boolean | undefined;
        red600?: string | number | boolean | undefined;
        red500?: string | number | boolean | undefined;
        red400?: string | number | boolean | undefined;
        red300?: string | number | boolean | undefined;
        red200?: string | number | boolean | undefined;
        red100?: string | number | boolean | undefined;
        red50?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        7?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        9?: string | number | boolean | undefined;
    } | undefined;
    sizes?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        7?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        9?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        11?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        13?: string | number | boolean | undefined;
        14?: string | number | boolean | undefined;
        15?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        17?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        19?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        21?: string | number | boolean | undefined;
        22?: string | number | boolean | undefined;
        23?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        25?: string | number | boolean | undefined;
        26?: string | number | boolean | undefined;
        27?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        29?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        31?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        33?: string | number | boolean | undefined;
        34?: string | number | boolean | undefined;
        35?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        h1?: string | number | boolean | undefined;
        h2?: string | number | boolean | undefined;
        h3?: string | number | boolean | undefined;
        h4?: string | number | boolean | undefined;
        h5?: string | number | boolean | undefined;
        h6?: string | number | boolean | undefined;
        body?: string | number | boolean | undefined;
        bodySm?: string | number | boolean | undefined;
        caption?: string | number | boolean | undefined;
        footnote?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        normal?: string | number | boolean | undefined;
        mono?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        hairline?: string | number | boolean | undefined;
        thin?: string | number | boolean | undefined;
        light?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        semibold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
        extrabold?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
    } | undefined;
    lineHeights?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
    } | undefined;
    letterSpacings?: {
        tighter?: string | number | boolean | undefined;
        tight?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        wide?: string | number | boolean | undefined;
        wider?: string | number | boolean | undefined;
        widest?: string | number | boolean | undefined;
    } | undefined;
    borderWidths?: {
        light?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
        extrabold?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        base?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
        squared?: string | number | boolean | undefined;
        rounded?: string | number | boolean | undefined;
        pill?: string | number | boolean | undefined;
    } | undefined;
    shadows?: {
        default?: string | number | boolean | undefined;
        a11y?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        max?: string | number | boolean | undefined;
    } | undefined;
    transitions?: {
        default?: string | number | boolean | undefined;
    } | undefined;
    breakpoints?: {
        n?: string | number | boolean | undefined;
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
    } | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
}), Argument1 extends string | ({
    colors?: {
        text?: string | number | boolean | undefined;
        primary?: string | number | boolean | undefined;
        'primary-darken-1'?: string | number | boolean | undefined;
        'primary-darken-2'?: string | number | boolean | undefined;
        'primary-darken-3'?: string | number | boolean | undefined;
        'primary-darken-4'?: string | number | boolean | undefined;
        'primary-lighten-1'?: string | number | boolean | undefined;
        'primary-lighten-2'?: string | number | boolean | undefined;
        'primary-lighten-3'?: string | number | boolean | undefined;
        'primary-lighten-4'?: string | number | boolean | undefined;
        'primary-lighten-5'?: string | number | boolean | undefined;
        'primary-lighten-6'?: string | number | boolean | undefined;
        'primary-lighten-7'?: string | number | boolean | undefined;
        'primary-lighten-8'?: string | number | boolean | undefined;
        'primary-readable'?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
        'secondary-darken-1'?: string | number | boolean | undefined;
        'secondary-darken-2'?: string | number | boolean | undefined;
        'secondary-darken-3'?: string | number | boolean | undefined;
        'secondary-darken-4'?: string | number | boolean | undefined;
        'secondary-lighten-1'?: string | number | boolean | undefined;
        'secondary-lighten-2'?: string | number | boolean | undefined;
        'secondary-lighten-3'?: string | number | boolean | undefined;
        'secondary-lighten-4'?: string | number | boolean | undefined;
        'secondary-lighten-5'?: string | number | boolean | undefined;
        'secondary-lighten-6'?: string | number | boolean | undefined;
        'secondary-lighten-7'?: string | number | boolean | undefined;
        'secondary-lighten-8'?: string | number | boolean | undefined;
        'secondary-readable'?: string | number | boolean | undefined;
        success?: string | number | boolean | undefined;
        'success-darken-1'?: string | number | boolean | undefined;
        'success-darken-2'?: string | number | boolean | undefined;
        'success-darken-3'?: string | number | boolean | undefined;
        'success-darken-4'?: string | number | boolean | undefined;
        'success-lighten-1'?: string | number | boolean | undefined;
        'success-lighten-2'?: string | number | boolean | undefined;
        'success-lighten-3'?: string | number | boolean | undefined;
        'success-lighten-4'?: string | number | boolean | undefined;
        'success-lighten-5'?: string | number | boolean | undefined;
        'success-lighten-6'?: string | number | boolean | undefined;
        'success-lighten-7'?: string | number | boolean | undefined;
        'success-lighten-8'?: string | number | boolean | undefined;
        'success-readable'?: string | number | boolean | undefined;
        warning?: string | number | boolean | undefined;
        'warning-darken-1'?: string | number | boolean | undefined;
        'warning-darken-2'?: string | number | boolean | undefined;
        'warning-darken-3'?: string | number | boolean | undefined;
        'warning-darken-4'?: string | number | boolean | undefined;
        'warning-lighten-1'?: string | number | boolean | undefined;
        'warning-lighten-2'?: string | number | boolean | undefined;
        'warning-lighten-3'?: string | number | boolean | undefined;
        'warning-lighten-4'?: string | number | boolean | undefined;
        'warning-lighten-5'?: string | number | boolean | undefined;
        'warning-lighten-6'?: string | number | boolean | undefined;
        'warning-lighten-7'?: string | number | boolean | undefined;
        'warning-lighten-8'?: string | number | boolean | undefined;
        'warning-readable'?: string | number | boolean | undefined;
        error?: string | number | boolean | undefined;
        'error-darken-1'?: string | number | boolean | undefined;
        'error-darken-2'?: string | number | boolean | undefined;
        'error-darken-3'?: string | number | boolean | undefined;
        'error-darken-4'?: string | number | boolean | undefined;
        'error-lighten-1'?: string | number | boolean | undefined;
        'error-lighten-2'?: string | number | boolean | undefined;
        'error-lighten-3'?: string | number | boolean | undefined;
        'error-lighten-4'?: string | number | boolean | undefined;
        'error-lighten-5'?: string | number | boolean | undefined;
        'error-lighten-6'?: string | number | boolean | undefined;
        'error-lighten-7'?: string | number | boolean | undefined;
        'error-lighten-8'?: string | number | boolean | undefined;
        'error-readable'?: string | number | boolean | undefined;
        neutral?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
        white?: string | number | boolean | undefined;
        popperDarkBg?: string | number | boolean | undefined;
        popperLightBg?: string | number | boolean | undefined;
        transparent?: string | number | boolean | undefined;
        brown900?: string | number | boolean | undefined;
        brown800?: string | number | boolean | undefined;
        brown700?: string | number | boolean | undefined;
        brown600?: string | number | boolean | undefined;
        brown500?: string | number | boolean | undefined;
        brown400?: string | number | boolean | undefined;
        brown300?: string | number | boolean | undefined;
        brown200?: string | number | boolean | undefined;
        brown100?: string | number | boolean | undefined;
        brown50?: string | number | boolean | undefined;
        blueGray900?: string | number | boolean | undefined;
        blueGray800?: string | number | boolean | undefined;
        blueGray700?: string | number | boolean | undefined;
        blueGray600?: string | number | boolean | undefined;
        blueGray500?: string | number | boolean | undefined;
        blueGray400?: string | number | boolean | undefined;
        blueGray300?: string | number | boolean | undefined;
        blueGray200?: string | number | boolean | undefined;
        blueGray100?: string | number | boolean | undefined;
        blueGray50?: string | number | boolean | undefined;
        gray900?: string | number | boolean | undefined;
        gray800?: string | number | boolean | undefined;
        gray700?: string | number | boolean | undefined;
        gray600?: string | number | boolean | undefined;
        gray500?: string | number | boolean | undefined;
        gray400?: string | number | boolean | undefined;
        gray300?: string | number | boolean | undefined;
        gray200?: string | number | boolean | undefined;
        gray100?: string | number | boolean | undefined;
        gray50?: string | number | boolean | undefined;
        deepOrange900?: string | number | boolean | undefined;
        deepOrange800?: string | number | boolean | undefined;
        deepOrange700?: string | number | boolean | undefined;
        deepOrange600?: string | number | boolean | undefined;
        deepOrange500?: string | number | boolean | undefined;
        deepOrange400?: string | number | boolean | undefined;
        deepOrange300?: string | number | boolean | undefined;
        deepOrange200?: string | number | boolean | undefined;
        deepOrange100?: string | number | boolean | undefined;
        deepOrange50?: string | number | boolean | undefined;
        orange900?: string | number | boolean | undefined;
        orange800?: string | number | boolean | undefined;
        orange700?: string | number | boolean | undefined;
        orange600?: string | number | boolean | undefined;
        orange500?: string | number | boolean | undefined;
        orange400?: string | number | boolean | undefined;
        orange300?: string | number | boolean | undefined;
        orange200?: string | number | boolean | undefined;
        orange100?: string | number | boolean | undefined;
        orange50?: string | number | boolean | undefined;
        amber900?: string | number | boolean | undefined;
        amber800?: string | number | boolean | undefined;
        amber700?: string | number | boolean | undefined;
        amber600?: string | number | boolean | undefined;
        amber500?: string | number | boolean | undefined;
        amber400?: string | number | boolean | undefined;
        amber300?: string | number | boolean | undefined;
        amber200?: string | number | boolean | undefined;
        amber100?: string | number | boolean | undefined;
        amber50?: string | number | boolean | undefined;
        yellow900?: string | number | boolean | undefined;
        yellow800?: string | number | boolean | undefined;
        yellow700?: string | number | boolean | undefined;
        yellow600?: string | number | boolean | undefined;
        yellow500?: string | number | boolean | undefined;
        yellow400?: string | number | boolean | undefined;
        yellow300?: string | number | boolean | undefined;
        yellow200?: string | number | boolean | undefined;
        yellow100?: string | number | boolean | undefined;
        yellow50?: string | number | boolean | undefined;
        lime900?: string | number | boolean | undefined;
        lime800?: string | number | boolean | undefined;
        lime700?: string | number | boolean | undefined;
        lime600?: string | number | boolean | undefined;
        lime500?: string | number | boolean | undefined;
        lime400?: string | number | boolean | undefined;
        lime300?: string | number | boolean | undefined;
        lime200?: string | number | boolean | undefined;
        lime100?: string | number | boolean | undefined;
        lime50?: string | number | boolean | undefined;
        lightGreen900?: string | number | boolean | undefined;
        lightGreen800?: string | number | boolean | undefined;
        lightGreen700?: string | number | boolean | undefined;
        lightGreen600?: string | number | boolean | undefined;
        lightGreen500?: string | number | boolean | undefined;
        lightGreen400?: string | number | boolean | undefined;
        lightGreen300?: string | number | boolean | undefined;
        lightGreen200?: string | number | boolean | undefined;
        lightGreen100?: string | number | boolean | undefined;
        lightGreen50?: string | number | boolean | undefined;
        green900?: string | number | boolean | undefined;
        green800?: string | number | boolean | undefined;
        green700?: string | number | boolean | undefined;
        green600?: string | number | boolean | undefined;
        green500?: string | number | boolean | undefined;
        green400?: string | number | boolean | undefined;
        green300?: string | number | boolean | undefined;
        green200?: string | number | boolean | undefined;
        green100?: string | number | boolean | undefined;
        green50?: string | number | boolean | undefined;
        teal900?: string | number | boolean | undefined;
        teal800?: string | number | boolean | undefined;
        teal700?: string | number | boolean | undefined;
        teal600?: string | number | boolean | undefined;
        teal500?: string | number | boolean | undefined;
        teal400?: string | number | boolean | undefined;
        teal300?: string | number | boolean | undefined;
        teal200?: string | number | boolean | undefined;
        teal100?: string | number | boolean | undefined;
        teal50?: string | number | boolean | undefined;
        cyan900?: string | number | boolean | undefined;
        cyan800?: string | number | boolean | undefined;
        cyan700?: string | number | boolean | undefined;
        cyan600?: string | number | boolean | undefined;
        cyan500?: string | number | boolean | undefined;
        cyan400?: string | number | boolean | undefined;
        cyan300?: string | number | boolean | undefined;
        cyan200?: string | number | boolean | undefined;
        cyan100?: string | number | boolean | undefined;
        cyan50?: string | number | boolean | undefined;
        blue900?: string | number | boolean | undefined;
        blue800?: string | number | boolean | undefined;
        blue700?: string | number | boolean | undefined;
        blue600?: string | number | boolean | undefined;
        blue500?: string | number | boolean | undefined;
        blue400?: string | number | boolean | undefined;
        blue300?: string | number | boolean | undefined;
        blue200?: string | number | boolean | undefined;
        blue100?: string | number | boolean | undefined;
        blue50?: string | number | boolean | undefined;
        indigo900?: string | number | boolean | undefined;
        indigo800?: string | number | boolean | undefined;
        indigo700?: string | number | boolean | undefined;
        indigo600?: string | number | boolean | undefined;
        indigo500?: string | number | boolean | undefined;
        indigo400?: string | number | boolean | undefined;
        indigo300?: string | number | boolean | undefined;
        indigo200?: string | number | boolean | undefined;
        indigo100?: string | number | boolean | undefined;
        indigo50?: string | number | boolean | undefined;
        purple900?: string | number | boolean | undefined;
        purple800?: string | number | boolean | undefined;
        purple700?: string | number | boolean | undefined;
        purple600?: string | number | boolean | undefined;
        purple500?: string | number | boolean | undefined;
        purple400?: string | number | boolean | undefined;
        purple300?: string | number | boolean | undefined;
        purple200?: string | number | boolean | undefined;
        purple100?: string | number | boolean | undefined;
        purple50?: string | number | boolean | undefined;
        violet900?: string | number | boolean | undefined;
        violet800?: string | number | boolean | undefined;
        violet700?: string | number | boolean | undefined;
        violet600?: string | number | boolean | undefined;
        violet500?: string | number | boolean | undefined;
        violet400?: string | number | boolean | undefined;
        violet300?: string | number | boolean | undefined;
        violet200?: string | number | boolean | undefined;
        violet100?: string | number | boolean | undefined;
        violet50?: string | number | boolean | undefined;
        grape900?: string | number | boolean | undefined;
        grape800?: string | number | boolean | undefined;
        grape700?: string | number | boolean | undefined;
        grape600?: string | number | boolean | undefined;
        grape500?: string | number | boolean | undefined;
        grape400?: string | number | boolean | undefined;
        grape300?: string | number | boolean | undefined;
        grape200?: string | number | boolean | undefined;
        grape100?: string | number | boolean | undefined;
        grape50?: string | number | boolean | undefined;
        pink900?: string | number | boolean | undefined;
        pink800?: string | number | boolean | undefined;
        pink700?: string | number | boolean | undefined;
        pink600?: string | number | boolean | undefined;
        pink500?: string | number | boolean | undefined;
        pink400?: string | number | boolean | undefined;
        pink300?: string | number | boolean | undefined;
        pink200?: string | number | boolean | undefined;
        pink100?: string | number | boolean | undefined;
        pink50?: string | number | boolean | undefined;
        red900?: string | number | boolean | undefined;
        red800?: string | number | boolean | undefined;
        red700?: string | number | boolean | undefined;
        red600?: string | number | boolean | undefined;
        red500?: string | number | boolean | undefined;
        red400?: string | number | boolean | undefined;
        red300?: string | number | boolean | undefined;
        red200?: string | number | boolean | undefined;
        red100?: string | number | boolean | undefined;
        red50?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        7?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        9?: string | number | boolean | undefined;
    } | undefined;
    sizes?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        7?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        9?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        11?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        13?: string | number | boolean | undefined;
        14?: string | number | boolean | undefined;
        15?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        17?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        19?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        21?: string | number | boolean | undefined;
        22?: string | number | boolean | undefined;
        23?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        25?: string | number | boolean | undefined;
        26?: string | number | boolean | undefined;
        27?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        29?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        31?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        33?: string | number | boolean | undefined;
        34?: string | number | boolean | undefined;
        35?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        h1?: string | number | boolean | undefined;
        h2?: string | number | boolean | undefined;
        h3?: string | number | boolean | undefined;
        h4?: string | number | boolean | undefined;
        h5?: string | number | boolean | undefined;
        h6?: string | number | boolean | undefined;
        body?: string | number | boolean | undefined;
        bodySm?: string | number | boolean | undefined;
        caption?: string | number | boolean | undefined;
        footnote?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        normal?: string | number | boolean | undefined;
        mono?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        hairline?: string | number | boolean | undefined;
        thin?: string | number | boolean | undefined;
        light?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        semibold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
        extrabold?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
    } | undefined;
    lineHeights?: {
        n?: string | number | boolean | undefined;
        0?: string | number | boolean | undefined;
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
    } | undefined;
    letterSpacings?: {
        tighter?: string | number | boolean | undefined;
        tight?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        wide?: string | number | boolean | undefined;
        wider?: string | number | boolean | undefined;
        widest?: string | number | boolean | undefined;
    } | undefined;
    borderWidths?: {
        light?: string | number | boolean | undefined;
        normal?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
        extrabold?: string | number | boolean | undefined;
        black?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        base?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
        squared?: string | number | boolean | undefined;
        rounded?: string | number | boolean | undefined;
        pill?: string | number | boolean | undefined;
    } | undefined;
    shadows?: {
        default?: string | number | boolean | undefined;
        a11y?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        max?: string | number | boolean | undefined;
    } | undefined;
    transitions?: {
        default?: string | number | boolean | undefined;
    } | undefined;
    breakpoints?: {
        n?: string | number | boolean | undefined;
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
    } | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
})>(nameOrScalesArg0: Argument0, nameOrScalesArg1?: Argument1 | undefined) => string & {
    className: string;
    selector: string;
} & (Argument0 extends string ? import("@stitches/react/types/stitches").ThemeTokens<Argument1, ""> : import("@stitches/react/types/stitches").ThemeTokens<Argument0, "">);
export declare const styled: {
    withConfig: (config: {
        componentId?: string | undefined;
        displayName?: string | undefined;
        shouldForwardStitchesProp?: ((prop: (string & {}) | "css") => boolean | void) | undefined;
    }) => import("@stitches/react/types/stitches").StyledFunctionType<{
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xsMax: string;
        smMax: string;
        mdMax: string;
        lgMax: string;
        xlMax: string;
        dark: string;
    }, {
        colors: {
            text: string;
            primary: string;
            'primary-darken-1': string;
            'primary-darken-2': string;
            'primary-darken-3': string;
            'primary-darken-4': string;
            'primary-lighten-1': string;
            'primary-lighten-2': string;
            'primary-lighten-3': string;
            'primary-lighten-4': string;
            'primary-lighten-5': string;
            'primary-lighten-6': string;
            'primary-lighten-7': string;
            'primary-lighten-8': string;
            'primary-readable': string;
            secondary: string;
            'secondary-darken-1': string;
            'secondary-darken-2': string;
            'secondary-darken-3': string;
            'secondary-darken-4': string;
            'secondary-lighten-1': string;
            'secondary-lighten-2': string;
            'secondary-lighten-3': string;
            'secondary-lighten-4': string;
            'secondary-lighten-5': string;
            'secondary-lighten-6': string;
            'secondary-lighten-7': string;
            'secondary-lighten-8': string;
            'secondary-readable': string;
            success: string;
            'success-darken-1': string;
            'success-darken-2': string;
            'success-darken-3': string;
            'success-darken-4': string;
            'success-lighten-1': string;
            'success-lighten-2': string;
            'success-lighten-3': string;
            'success-lighten-4': string;
            'success-lighten-5': string;
            'success-lighten-6': string;
            'success-lighten-7': string;
            'success-lighten-8': string;
            'success-readable': string;
            warning: string;
            'warning-darken-1': string;
            'warning-darken-2': string;
            'warning-darken-3': string;
            'warning-darken-4': string;
            'warning-lighten-1': string;
            'warning-lighten-2': string;
            'warning-lighten-3': string;
            'warning-lighten-4': string;
            'warning-lighten-5': string;
            'warning-lighten-6': string;
            'warning-lighten-7': string;
            'warning-lighten-8': string;
            'warning-readable': string;
            error: string;
            'error-darken-1': string;
            'error-darken-2': string;
            'error-darken-3': string;
            'error-darken-4': string;
            'error-lighten-1': string;
            'error-lighten-2': string;
            'error-lighten-3': string;
            'error-lighten-4': string;
            'error-lighten-5': string;
            'error-lighten-6': string;
            'error-lighten-7': string;
            'error-lighten-8': string;
            'error-readable': string;
            neutral: string;
            black: string;
            white: string;
            popperDarkBg: string;
            popperLightBg: string;
            transparent: string;
            brown900: string;
            brown800: string;
            brown700: string;
            brown600: string;
            brown500: string;
            brown400: string;
            brown300: string;
            brown200: string;
            brown100: string;
            brown50: string;
            blueGray900: string;
            blueGray800: string;
            blueGray700: string;
            blueGray600: string;
            blueGray500: string;
            blueGray400: string;
            blueGray300: string;
            blueGray200: string;
            blueGray100: string;
            blueGray50: string;
            gray900: string;
            gray800: string;
            gray700: string;
            gray600: string;
            gray500: string;
            gray400: string;
            gray300: string;
            gray200: string;
            gray100: string;
            gray50: string;
            deepOrange900: string;
            deepOrange800: string;
            deepOrange700: string;
            deepOrange600: string;
            deepOrange500: string;
            deepOrange400: string;
            deepOrange300: string;
            deepOrange200: string;
            deepOrange100: string;
            deepOrange50: string;
            orange900: string;
            orange800: string;
            orange700: string;
            orange600: string;
            orange500: string;
            orange400: string;
            orange300: string;
            orange200: string;
            orange100: string;
            orange50: string;
            amber900: string;
            amber800: string;
            amber700: string;
            amber600: string;
            amber500: string;
            amber400: string;
            amber300: string;
            amber200: string;
            amber100: string;
            amber50: string;
            yellow900: string;
            yellow800: string;
            yellow700: string;
            yellow600: string;
            yellow500: string;
            yellow400: string;
            yellow300: string;
            yellow200: string;
            yellow100: string;
            yellow50: string;
            lime900: string;
            lime800: string;
            lime700: string;
            lime600: string;
            lime500: string;
            lime400: string;
            lime300: string;
            lime200: string;
            lime100: string;
            lime50: string;
            lightGreen900: string;
            lightGreen800: string;
            lightGreen700: string;
            lightGreen600: string;
            lightGreen500: string;
            lightGreen400: string;
            lightGreen300: string;
            lightGreen200: string;
            lightGreen100: string;
            lightGreen50: string;
            green900: string;
            green800: string;
            green700: string;
            green600: string;
            green500: string;
            green400: string;
            green300: string;
            green200: string;
            green100: string;
            green50: string;
            teal900: string;
            teal800: string;
            teal700: string;
            teal600: string;
            teal500: string;
            teal400: string;
            teal300: string;
            teal200: string;
            teal100: string;
            teal50: string;
            cyan900: string;
            cyan800: string;
            cyan700: string;
            cyan600: string;
            cyan500: string;
            cyan400: string;
            cyan300: string;
            cyan200: string;
            cyan100: string;
            cyan50: string;
            blue900: string;
            blue800: string;
            blue700: string;
            blue600: string;
            blue500: string;
            blue400: string;
            blue300: string;
            blue200: string;
            blue100: string;
            blue50: string;
            indigo900: string;
            indigo800: string;
            indigo700: string;
            indigo600: string;
            indigo500: string;
            indigo400: string;
            indigo300: string;
            indigo200: string;
            indigo100: string;
            indigo50: string;
            purple900: string;
            purple800: string;
            purple700: string;
            purple600: string;
            purple500: string;
            purple400: string;
            purple300: string;
            purple200: string;
            purple100: string;
            purple50: string;
            violet900: string;
            violet800: string;
            violet700: string;
            violet600: string;
            violet500: string;
            violet400: string;
            violet300: string;
            violet200: string;
            violet100: string;
            violet50: string;
            grape900: string;
            grape800: string;
            grape700: string;
            grape600: string;
            grape500: string;
            grape400: string;
            grape300: string;
            grape200: string;
            grape100: string;
            grape50: string;
            pink900: string;
            pink800: string;
            pink700: string;
            pink600: string;
            pink500: string;
            pink400: string;
            pink300: string;
            pink200: string;
            pink100: string;
            pink50: string;
            red900: string;
            red800: string;
            red700: string;
            red600: string;
            red500: string;
            red400: string;
            red300: string;
            red200: string;
            red100: string;
            red50: string;
        };
        space: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
        };
        sizes: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
            13: string;
            14: string;
            15: string;
            16: string;
            17: string;
            18: string;
            19: string;
            20: string;
            21: string;
            22: string;
            23: string;
            24: string;
            25: string;
            26: string;
            27: string;
            28: string;
            29: string;
            30: string;
            31: string;
            32: string;
            33: string;
            34: string;
            35: string;
            36: string;
        };
        fontSizes: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            body: string;
            bodySm: string;
            caption: string;
            footnote: string;
        };
        fonts: {
            normal: string;
            mono: string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        borderWidths: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        radii: {
            xs: string;
            sm: string;
            md: string;
            base: string;
            lg: string;
            xl: string;
            squared: string;
            rounded: string;
            pill: string;
        };
        shadows: {
            default: string;
            a11y: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            10: string;
            max: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            n: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    }, import("@stitches/react/types/config").DefaultThemeMap, {
        m: (value: Stitches.PropertyValue<'margin'>) => {
            margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
        };
        mt: (value: Stitches.PropertyValue<'marginTop'>) => {
            marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
        };
        mr: (value: Stitches.PropertyValue<'marginRight'>) => {
            marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
        };
        mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
            marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
        };
        ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
        };
        mx: (value: Stitches.ScaleValue<'space'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        my: (value: Stitches.ScaleValue<'space'>) => {
            marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        p: (value: Stitches.PropertyValue<'padding'>) => {
            padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
        };
        pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
        };
        pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
            paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
        };
        pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
            paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
        };
        pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
        };
        px: (value: Stitches.ScaleValue<'space'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        py: (value: Stitches.ScaleValue<'space'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
            backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
        };
        size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
            width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
            height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        };
        linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
            backgroundImage: string;
        };
        br: (value: Stitches.PropertyValue<'borderRadius'>) => {
            borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
        };
        dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
            display: string;
            justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
            alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        };
    }>;
} & import("@stitches/react/types/stitches").StyledFunctionType<{
    n: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    dark: string;
}, {
    colors: {
        text: string;
        primary: string;
        'primary-darken-1': string;
        'primary-darken-2': string;
        'primary-darken-3': string;
        'primary-darken-4': string;
        'primary-lighten-1': string;
        'primary-lighten-2': string;
        'primary-lighten-3': string;
        'primary-lighten-4': string;
        'primary-lighten-5': string;
        'primary-lighten-6': string;
        'primary-lighten-7': string;
        'primary-lighten-8': string;
        'primary-readable': string;
        secondary: string;
        'secondary-darken-1': string;
        'secondary-darken-2': string;
        'secondary-darken-3': string;
        'secondary-darken-4': string;
        'secondary-lighten-1': string;
        'secondary-lighten-2': string;
        'secondary-lighten-3': string;
        'secondary-lighten-4': string;
        'secondary-lighten-5': string;
        'secondary-lighten-6': string;
        'secondary-lighten-7': string;
        'secondary-lighten-8': string;
        'secondary-readable': string;
        success: string;
        'success-darken-1': string;
        'success-darken-2': string;
        'success-darken-3': string;
        'success-darken-4': string;
        'success-lighten-1': string;
        'success-lighten-2': string;
        'success-lighten-3': string;
        'success-lighten-4': string;
        'success-lighten-5': string;
        'success-lighten-6': string;
        'success-lighten-7': string;
        'success-lighten-8': string;
        'success-readable': string;
        warning: string;
        'warning-darken-1': string;
        'warning-darken-2': string;
        'warning-darken-3': string;
        'warning-darken-4': string;
        'warning-lighten-1': string;
        'warning-lighten-2': string;
        'warning-lighten-3': string;
        'warning-lighten-4': string;
        'warning-lighten-5': string;
        'warning-lighten-6': string;
        'warning-lighten-7': string;
        'warning-lighten-8': string;
        'warning-readable': string;
        error: string;
        'error-darken-1': string;
        'error-darken-2': string;
        'error-darken-3': string;
        'error-darken-4': string;
        'error-lighten-1': string;
        'error-lighten-2': string;
        'error-lighten-3': string;
        'error-lighten-4': string;
        'error-lighten-5': string;
        'error-lighten-6': string;
        'error-lighten-7': string;
        'error-lighten-8': string;
        'error-readable': string;
        neutral: string;
        black: string;
        white: string;
        popperDarkBg: string;
        popperLightBg: string;
        transparent: string;
        brown900: string;
        brown800: string;
        brown700: string;
        brown600: string;
        brown500: string;
        brown400: string;
        brown300: string;
        brown200: string;
        brown100: string;
        brown50: string;
        blueGray900: string;
        blueGray800: string;
        blueGray700: string;
        blueGray600: string;
        blueGray500: string;
        blueGray400: string;
        blueGray300: string;
        blueGray200: string;
        blueGray100: string;
        blueGray50: string;
        gray900: string;
        gray800: string;
        gray700: string;
        gray600: string;
        gray500: string;
        gray400: string;
        gray300: string;
        gray200: string;
        gray100: string;
        gray50: string;
        deepOrange900: string;
        deepOrange800: string;
        deepOrange700: string;
        deepOrange600: string;
        deepOrange500: string;
        deepOrange400: string;
        deepOrange300: string;
        deepOrange200: string;
        deepOrange100: string;
        deepOrange50: string;
        orange900: string;
        orange800: string;
        orange700: string;
        orange600: string;
        orange500: string;
        orange400: string;
        orange300: string;
        orange200: string;
        orange100: string;
        orange50: string;
        amber900: string;
        amber800: string;
        amber700: string;
        amber600: string;
        amber500: string;
        amber400: string;
        amber300: string;
        amber200: string;
        amber100: string;
        amber50: string;
        yellow900: string;
        yellow800: string;
        yellow700: string;
        yellow600: string;
        yellow500: string;
        yellow400: string;
        yellow300: string;
        yellow200: string;
        yellow100: string;
        yellow50: string;
        lime900: string;
        lime800: string;
        lime700: string;
        lime600: string;
        lime500: string;
        lime400: string;
        lime300: string;
        lime200: string;
        lime100: string;
        lime50: string;
        lightGreen900: string;
        lightGreen800: string;
        lightGreen700: string;
        lightGreen600: string;
        lightGreen500: string;
        lightGreen400: string;
        lightGreen300: string;
        lightGreen200: string;
        lightGreen100: string;
        lightGreen50: string;
        green900: string;
        green800: string;
        green700: string;
        green600: string;
        green500: string;
        green400: string;
        green300: string;
        green200: string;
        green100: string;
        green50: string;
        teal900: string;
        teal800: string;
        teal700: string;
        teal600: string;
        teal500: string;
        teal400: string;
        teal300: string;
        teal200: string;
        teal100: string;
        teal50: string;
        cyan900: string;
        cyan800: string;
        cyan700: string;
        cyan600: string;
        cyan500: string;
        cyan400: string;
        cyan300: string;
        cyan200: string;
        cyan100: string;
        cyan50: string;
        blue900: string;
        blue800: string;
        blue700: string;
        blue600: string;
        blue500: string;
        blue400: string;
        blue300: string;
        blue200: string;
        blue100: string;
        blue50: string;
        indigo900: string;
        indigo800: string;
        indigo700: string;
        indigo600: string;
        indigo500: string;
        indigo400: string;
        indigo300: string;
        indigo200: string;
        indigo100: string;
        indigo50: string;
        purple900: string;
        purple800: string;
        purple700: string;
        purple600: string;
        purple500: string;
        purple400: string;
        purple300: string;
        purple200: string;
        purple100: string;
        purple50: string;
        violet900: string;
        violet800: string;
        violet700: string;
        violet600: string;
        violet500: string;
        violet400: string;
        violet300: string;
        violet200: string;
        violet100: string;
        violet50: string;
        grape900: string;
        grape800: string;
        grape700: string;
        grape600: string;
        grape500: string;
        grape400: string;
        grape300: string;
        grape200: string;
        grape100: string;
        grape50: string;
        pink900: string;
        pink800: string;
        pink700: string;
        pink600: string;
        pink500: string;
        pink400: string;
        pink300: string;
        pink200: string;
        pink100: string;
        pink50: string;
        red900: string;
        red800: string;
        red700: string;
        red600: string;
        red500: string;
        red400: string;
        red300: string;
        red200: string;
        red100: string;
        red50: string;
    };
    space: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
    };
    sizes: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
        21: string;
        22: string;
        23: string;
        24: string;
        25: string;
        26: string;
        27: string;
        28: string;
        29: string;
        30: string;
        31: string;
        32: string;
        33: string;
        34: string;
        35: string;
        36: string;
    };
    fontSizes: {
        h1: string;
        h2: string;
        h3: string;
        h4: string;
        h5: string;
        h6: string;
        body: string;
        bodySm: string;
        caption: string;
        footnote: string;
    };
    fonts: {
        normal: string;
        mono: string;
    };
    fontWeights: {
        hairline: number;
        thin: number;
        light: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        extrabold: number;
        black: number;
    };
    lineHeights: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    letterSpacings: {
        tighter: string;
        tight: string;
        normal: string;
        wide: string;
        wider: string;
        widest: string;
    };
    borderWidths: {
        light: string;
        normal: string;
        bold: string;
        extrabold: string;
        black: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        squared: string;
        rounded: string;
        pill: string;
    };
    shadows: {
        default: string;
        a11y: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        10: string;
        max: string;
    };
    transitions: {
        default: string;
    };
    breakpoints: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: Stitches.PropertyValue<'margin'>) => {
        margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
    };
    mt: (value: Stitches.PropertyValue<'marginTop'>) => {
        marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
    };
    mr: (value: Stitches.PropertyValue<'marginRight'>) => {
        marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
    };
    mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
        marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
    };
    ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
    };
    mx: (value: Stitches.ScaleValue<'space'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    my: (value: Stitches.ScaleValue<'space'>) => {
        marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    p: (value: Stitches.PropertyValue<'padding'>) => {
        padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
    };
    pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
    };
    pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
        paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
    };
    pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
        paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
    };
    pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
    };
    px: (value: Stitches.ScaleValue<'space'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    py: (value: Stitches.ScaleValue<'space'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
        backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
    };
    size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
        width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
    };
    linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
        backgroundImage: string;
    };
    br: (value: Stitches.PropertyValue<'borderRadius'>) => {
        borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
    };
    dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
        display: string;
        justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
    };
}>;
export declare const css: {
    withConfig: (config: {
        componentId?: string | undefined;
        displayName?: string | undefined;
        shouldForwardStitchesProp?: ((prop: (string & {}) | "css") => boolean | void) | undefined;
    }) => import("@stitches/react/types/stitches").CssFunctionType<{
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xsMax: string;
        smMax: string;
        mdMax: string;
        lgMax: string;
        xlMax: string;
        dark: string;
    }, {
        colors: {
            text: string;
            primary: string;
            'primary-darken-1': string;
            'primary-darken-2': string;
            'primary-darken-3': string;
            'primary-darken-4': string;
            'primary-lighten-1': string;
            'primary-lighten-2': string;
            'primary-lighten-3': string;
            'primary-lighten-4': string;
            'primary-lighten-5': string;
            'primary-lighten-6': string;
            'primary-lighten-7': string;
            'primary-lighten-8': string;
            'primary-readable': string;
            secondary: string;
            'secondary-darken-1': string;
            'secondary-darken-2': string;
            'secondary-darken-3': string;
            'secondary-darken-4': string;
            'secondary-lighten-1': string;
            'secondary-lighten-2': string;
            'secondary-lighten-3': string;
            'secondary-lighten-4': string;
            'secondary-lighten-5': string;
            'secondary-lighten-6': string;
            'secondary-lighten-7': string;
            'secondary-lighten-8': string;
            'secondary-readable': string;
            success: string;
            'success-darken-1': string;
            'success-darken-2': string;
            'success-darken-3': string;
            'success-darken-4': string;
            'success-lighten-1': string;
            'success-lighten-2': string;
            'success-lighten-3': string;
            'success-lighten-4': string;
            'success-lighten-5': string;
            'success-lighten-6': string;
            'success-lighten-7': string;
            'success-lighten-8': string;
            'success-readable': string;
            warning: string;
            'warning-darken-1': string;
            'warning-darken-2': string;
            'warning-darken-3': string;
            'warning-darken-4': string;
            'warning-lighten-1': string;
            'warning-lighten-2': string;
            'warning-lighten-3': string;
            'warning-lighten-4': string;
            'warning-lighten-5': string;
            'warning-lighten-6': string;
            'warning-lighten-7': string;
            'warning-lighten-8': string;
            'warning-readable': string;
            error: string;
            'error-darken-1': string;
            'error-darken-2': string;
            'error-darken-3': string;
            'error-darken-4': string;
            'error-lighten-1': string;
            'error-lighten-2': string;
            'error-lighten-3': string;
            'error-lighten-4': string;
            'error-lighten-5': string;
            'error-lighten-6': string;
            'error-lighten-7': string;
            'error-lighten-8': string;
            'error-readable': string;
            neutral: string;
            black: string;
            white: string;
            popperDarkBg: string;
            popperLightBg: string;
            transparent: string;
            brown900: string;
            brown800: string;
            brown700: string;
            brown600: string;
            brown500: string;
            brown400: string;
            brown300: string;
            brown200: string;
            brown100: string;
            brown50: string;
            blueGray900: string;
            blueGray800: string;
            blueGray700: string;
            blueGray600: string;
            blueGray500: string;
            blueGray400: string;
            blueGray300: string;
            blueGray200: string;
            blueGray100: string;
            blueGray50: string;
            gray900: string;
            gray800: string;
            gray700: string;
            gray600: string;
            gray500: string;
            gray400: string;
            gray300: string;
            gray200: string;
            gray100: string;
            gray50: string;
            deepOrange900: string;
            deepOrange800: string;
            deepOrange700: string;
            deepOrange600: string;
            deepOrange500: string;
            deepOrange400: string;
            deepOrange300: string;
            deepOrange200: string;
            deepOrange100: string;
            deepOrange50: string;
            orange900: string;
            orange800: string;
            orange700: string;
            orange600: string;
            orange500: string;
            orange400: string;
            orange300: string;
            orange200: string;
            orange100: string;
            orange50: string;
            amber900: string;
            amber800: string;
            amber700: string;
            amber600: string;
            amber500: string;
            amber400: string;
            amber300: string;
            amber200: string;
            amber100: string;
            amber50: string;
            yellow900: string;
            yellow800: string;
            yellow700: string;
            yellow600: string;
            yellow500: string;
            yellow400: string;
            yellow300: string;
            yellow200: string;
            yellow100: string;
            yellow50: string;
            lime900: string;
            lime800: string;
            lime700: string;
            lime600: string;
            lime500: string;
            lime400: string;
            lime300: string;
            lime200: string;
            lime100: string;
            lime50: string;
            lightGreen900: string;
            lightGreen800: string;
            lightGreen700: string;
            lightGreen600: string;
            lightGreen500: string;
            lightGreen400: string;
            lightGreen300: string;
            lightGreen200: string;
            lightGreen100: string;
            lightGreen50: string;
            green900: string;
            green800: string;
            green700: string;
            green600: string;
            green500: string;
            green400: string;
            green300: string;
            green200: string;
            green100: string;
            green50: string;
            teal900: string;
            teal800: string;
            teal700: string;
            teal600: string;
            teal500: string;
            teal400: string;
            teal300: string;
            teal200: string;
            teal100: string;
            teal50: string;
            cyan900: string;
            cyan800: string;
            cyan700: string;
            cyan600: string;
            cyan500: string;
            cyan400: string;
            cyan300: string;
            cyan200: string;
            cyan100: string;
            cyan50: string;
            blue900: string;
            blue800: string;
            blue700: string;
            blue600: string;
            blue500: string;
            blue400: string;
            blue300: string;
            blue200: string;
            blue100: string;
            blue50: string;
            indigo900: string;
            indigo800: string;
            indigo700: string;
            indigo600: string;
            indigo500: string;
            indigo400: string;
            indigo300: string;
            indigo200: string;
            indigo100: string;
            indigo50: string;
            purple900: string;
            purple800: string;
            purple700: string;
            purple600: string;
            purple500: string;
            purple400: string;
            purple300: string;
            purple200: string;
            purple100: string;
            purple50: string;
            violet900: string;
            violet800: string;
            violet700: string;
            violet600: string;
            violet500: string;
            violet400: string;
            violet300: string;
            violet200: string;
            violet100: string;
            violet50: string;
            grape900: string;
            grape800: string;
            grape700: string;
            grape600: string;
            grape500: string;
            grape400: string;
            grape300: string;
            grape200: string;
            grape100: string;
            grape50: string;
            pink900: string;
            pink800: string;
            pink700: string;
            pink600: string;
            pink500: string;
            pink400: string;
            pink300: string;
            pink200: string;
            pink100: string;
            pink50: string;
            red900: string;
            red800: string;
            red700: string;
            red600: string;
            red500: string;
            red400: string;
            red300: string;
            red200: string;
            red100: string;
            red50: string;
        };
        space: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
        };
        sizes: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
            13: string;
            14: string;
            15: string;
            16: string;
            17: string;
            18: string;
            19: string;
            20: string;
            21: string;
            22: string;
            23: string;
            24: string;
            25: string;
            26: string;
            27: string;
            28: string;
            29: string;
            30: string;
            31: string;
            32: string;
            33: string;
            34: string;
            35: string;
            36: string;
        };
        fontSizes: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            body: string;
            bodySm: string;
            caption: string;
            footnote: string;
        };
        fonts: {
            normal: string;
            mono: string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        borderWidths: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        radii: {
            xs: string;
            sm: string;
            md: string;
            base: string;
            lg: string;
            xl: string;
            squared: string;
            rounded: string;
            pill: string;
        };
        shadows: {
            default: string;
            a11y: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            10: string;
            max: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            n: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    }, import("@stitches/react/types/config").DefaultThemeMap, {
        m: (value: Stitches.PropertyValue<'margin'>) => {
            margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
        };
        mt: (value: Stitches.PropertyValue<'marginTop'>) => {
            marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
        };
        mr: (value: Stitches.PropertyValue<'marginRight'>) => {
            marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
        };
        mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
            marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
        };
        ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
        };
        mx: (value: Stitches.ScaleValue<'space'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        my: (value: Stitches.ScaleValue<'space'>) => {
            marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        p: (value: Stitches.PropertyValue<'padding'>) => {
            padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
        };
        pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
        };
        pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
            paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
        };
        pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
            paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
        };
        pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
        };
        px: (value: Stitches.ScaleValue<'space'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        py: (value: Stitches.ScaleValue<'space'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
            backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
        };
        size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
            width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
            height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        };
        linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
            backgroundImage: string;
        };
        br: (value: Stitches.PropertyValue<'borderRadius'>) => {
            borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
        };
        dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
            display: string;
            justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
            alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        };
    }>;
} & import("@stitches/react/types/stitches").CssFunctionType<{
    n: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    dark: string;
}, {
    colors: {
        text: string;
        primary: string;
        'primary-darken-1': string;
        'primary-darken-2': string;
        'primary-darken-3': string;
        'primary-darken-4': string;
        'primary-lighten-1': string;
        'primary-lighten-2': string;
        'primary-lighten-3': string;
        'primary-lighten-4': string;
        'primary-lighten-5': string;
        'primary-lighten-6': string;
        'primary-lighten-7': string;
        'primary-lighten-8': string;
        'primary-readable': string;
        secondary: string;
        'secondary-darken-1': string;
        'secondary-darken-2': string;
        'secondary-darken-3': string;
        'secondary-darken-4': string;
        'secondary-lighten-1': string;
        'secondary-lighten-2': string;
        'secondary-lighten-3': string;
        'secondary-lighten-4': string;
        'secondary-lighten-5': string;
        'secondary-lighten-6': string;
        'secondary-lighten-7': string;
        'secondary-lighten-8': string;
        'secondary-readable': string;
        success: string;
        'success-darken-1': string;
        'success-darken-2': string;
        'success-darken-3': string;
        'success-darken-4': string;
        'success-lighten-1': string;
        'success-lighten-2': string;
        'success-lighten-3': string;
        'success-lighten-4': string;
        'success-lighten-5': string;
        'success-lighten-6': string;
        'success-lighten-7': string;
        'success-lighten-8': string;
        'success-readable': string;
        warning: string;
        'warning-darken-1': string;
        'warning-darken-2': string;
        'warning-darken-3': string;
        'warning-darken-4': string;
        'warning-lighten-1': string;
        'warning-lighten-2': string;
        'warning-lighten-3': string;
        'warning-lighten-4': string;
        'warning-lighten-5': string;
        'warning-lighten-6': string;
        'warning-lighten-7': string;
        'warning-lighten-8': string;
        'warning-readable': string;
        error: string;
        'error-darken-1': string;
        'error-darken-2': string;
        'error-darken-3': string;
        'error-darken-4': string;
        'error-lighten-1': string;
        'error-lighten-2': string;
        'error-lighten-3': string;
        'error-lighten-4': string;
        'error-lighten-5': string;
        'error-lighten-6': string;
        'error-lighten-7': string;
        'error-lighten-8': string;
        'error-readable': string;
        neutral: string;
        black: string;
        white: string;
        popperDarkBg: string;
        popperLightBg: string;
        transparent: string;
        brown900: string;
        brown800: string;
        brown700: string;
        brown600: string;
        brown500: string;
        brown400: string;
        brown300: string;
        brown200: string;
        brown100: string;
        brown50: string;
        blueGray900: string;
        blueGray800: string;
        blueGray700: string;
        blueGray600: string;
        blueGray500: string;
        blueGray400: string;
        blueGray300: string;
        blueGray200: string;
        blueGray100: string;
        blueGray50: string;
        gray900: string;
        gray800: string;
        gray700: string;
        gray600: string;
        gray500: string;
        gray400: string;
        gray300: string;
        gray200: string;
        gray100: string;
        gray50: string;
        deepOrange900: string;
        deepOrange800: string;
        deepOrange700: string;
        deepOrange600: string;
        deepOrange500: string;
        deepOrange400: string;
        deepOrange300: string;
        deepOrange200: string;
        deepOrange100: string;
        deepOrange50: string;
        orange900: string;
        orange800: string;
        orange700: string;
        orange600: string;
        orange500: string;
        orange400: string;
        orange300: string;
        orange200: string;
        orange100: string;
        orange50: string;
        amber900: string;
        amber800: string;
        amber700: string;
        amber600: string;
        amber500: string;
        amber400: string;
        amber300: string;
        amber200: string;
        amber100: string;
        amber50: string;
        yellow900: string;
        yellow800: string;
        yellow700: string;
        yellow600: string;
        yellow500: string;
        yellow400: string;
        yellow300: string;
        yellow200: string;
        yellow100: string;
        yellow50: string;
        lime900: string;
        lime800: string;
        lime700: string;
        lime600: string;
        lime500: string;
        lime400: string;
        lime300: string;
        lime200: string;
        lime100: string;
        lime50: string;
        lightGreen900: string;
        lightGreen800: string;
        lightGreen700: string;
        lightGreen600: string;
        lightGreen500: string;
        lightGreen400: string;
        lightGreen300: string;
        lightGreen200: string;
        lightGreen100: string;
        lightGreen50: string;
        green900: string;
        green800: string;
        green700: string;
        green600: string;
        green500: string;
        green400: string;
        green300: string;
        green200: string;
        green100: string;
        green50: string;
        teal900: string;
        teal800: string;
        teal700: string;
        teal600: string;
        teal500: string;
        teal400: string;
        teal300: string;
        teal200: string;
        teal100: string;
        teal50: string;
        cyan900: string;
        cyan800: string;
        cyan700: string;
        cyan600: string;
        cyan500: string;
        cyan400: string;
        cyan300: string;
        cyan200: string;
        cyan100: string;
        cyan50: string;
        blue900: string;
        blue800: string;
        blue700: string;
        blue600: string;
        blue500: string;
        blue400: string;
        blue300: string;
        blue200: string;
        blue100: string;
        blue50: string;
        indigo900: string;
        indigo800: string;
        indigo700: string;
        indigo600: string;
        indigo500: string;
        indigo400: string;
        indigo300: string;
        indigo200: string;
        indigo100: string;
        indigo50: string;
        purple900: string;
        purple800: string;
        purple700: string;
        purple600: string;
        purple500: string;
        purple400: string;
        purple300: string;
        purple200: string;
        purple100: string;
        purple50: string;
        violet900: string;
        violet800: string;
        violet700: string;
        violet600: string;
        violet500: string;
        violet400: string;
        violet300: string;
        violet200: string;
        violet100: string;
        violet50: string;
        grape900: string;
        grape800: string;
        grape700: string;
        grape600: string;
        grape500: string;
        grape400: string;
        grape300: string;
        grape200: string;
        grape100: string;
        grape50: string;
        pink900: string;
        pink800: string;
        pink700: string;
        pink600: string;
        pink500: string;
        pink400: string;
        pink300: string;
        pink200: string;
        pink100: string;
        pink50: string;
        red900: string;
        red800: string;
        red700: string;
        red600: string;
        red500: string;
        red400: string;
        red300: string;
        red200: string;
        red100: string;
        red50: string;
    };
    space: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
    };
    sizes: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
        21: string;
        22: string;
        23: string;
        24: string;
        25: string;
        26: string;
        27: string;
        28: string;
        29: string;
        30: string;
        31: string;
        32: string;
        33: string;
        34: string;
        35: string;
        36: string;
    };
    fontSizes: {
        h1: string;
        h2: string;
        h3: string;
        h4: string;
        h5: string;
        h6: string;
        body: string;
        bodySm: string;
        caption: string;
        footnote: string;
    };
    fonts: {
        normal: string;
        mono: string;
    };
    fontWeights: {
        hairline: number;
        thin: number;
        light: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        extrabold: number;
        black: number;
    };
    lineHeights: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    letterSpacings: {
        tighter: string;
        tight: string;
        normal: string;
        wide: string;
        wider: string;
        widest: string;
    };
    borderWidths: {
        light: string;
        normal: string;
        bold: string;
        extrabold: string;
        black: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        squared: string;
        rounded: string;
        pill: string;
    };
    shadows: {
        default: string;
        a11y: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        10: string;
        max: string;
    };
    transitions: {
        default: string;
    };
    breakpoints: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: Stitches.PropertyValue<'margin'>) => {
        margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
    };
    mt: (value: Stitches.PropertyValue<'marginTop'>) => {
        marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
    };
    mr: (value: Stitches.PropertyValue<'marginRight'>) => {
        marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
    };
    mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
        marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
    };
    ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
    };
    mx: (value: Stitches.ScaleValue<'space'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    my: (value: Stitches.ScaleValue<'space'>) => {
        marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    p: (value: Stitches.PropertyValue<'padding'>) => {
        padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
    };
    pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
    };
    pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
        paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
    };
    pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
        paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
    };
    pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
    };
    px: (value: Stitches.ScaleValue<'space'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    py: (value: Stitches.ScaleValue<'space'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
        backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
    };
    size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
        width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
    };
    linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
        backgroundImage: string;
    };
    br: (value: Stitches.PropertyValue<'borderRadius'>) => {
        borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
    };
    dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
        display: string;
        justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
    };
}>;
export declare const globalCss: <Styles extends {
    [K: string]: any;
}>(...styles: ({
    '@import'?: unknown;
    '@font-face'?: unknown;
} & { [K in keyof Styles]: K extends "@import" ? string | string[] : K extends "@font-face" ? import("@stitches/react/types/css").AtRule.FontFace | import("@stitches/react/types/css").AtRule.FontFace[] : K extends `@keyframes ${string}` ? {
    [x: string]: import("@stitches/react/types/css-util").CSS<{
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xsMax: string;
        smMax: string;
        mdMax: string;
        lgMax: string;
        xlMax: string;
        dark: string;
    }, {
        colors: {
            text: string;
            primary: string;
            'primary-darken-1': string;
            'primary-darken-2': string;
            'primary-darken-3': string;
            'primary-darken-4': string;
            'primary-lighten-1': string;
            'primary-lighten-2': string;
            'primary-lighten-3': string;
            'primary-lighten-4': string;
            'primary-lighten-5': string;
            'primary-lighten-6': string;
            'primary-lighten-7': string;
            'primary-lighten-8': string;
            'primary-readable': string;
            secondary: string;
            'secondary-darken-1': string;
            'secondary-darken-2': string;
            'secondary-darken-3': string;
            'secondary-darken-4': string;
            'secondary-lighten-1': string;
            'secondary-lighten-2': string;
            'secondary-lighten-3': string;
            'secondary-lighten-4': string;
            'secondary-lighten-5': string;
            'secondary-lighten-6': string;
            'secondary-lighten-7': string;
            'secondary-lighten-8': string;
            'secondary-readable': string;
            success: string;
            'success-darken-1': string;
            'success-darken-2': string;
            'success-darken-3': string;
            'success-darken-4': string;
            'success-lighten-1': string;
            'success-lighten-2': string;
            'success-lighten-3': string;
            'success-lighten-4': string;
            'success-lighten-5': string;
            'success-lighten-6': string;
            'success-lighten-7': string;
            'success-lighten-8': string;
            'success-readable': string;
            warning: string;
            'warning-darken-1': string;
            'warning-darken-2': string;
            'warning-darken-3': string;
            'warning-darken-4': string;
            'warning-lighten-1': string;
            'warning-lighten-2': string;
            'warning-lighten-3': string;
            'warning-lighten-4': string;
            'warning-lighten-5': string;
            'warning-lighten-6': string;
            'warning-lighten-7': string;
            'warning-lighten-8': string;
            'warning-readable': string;
            error: string;
            'error-darken-1': string;
            'error-darken-2': string;
            'error-darken-3': string;
            'error-darken-4': string;
            'error-lighten-1': string;
            'error-lighten-2': string;
            'error-lighten-3': string;
            'error-lighten-4': string;
            'error-lighten-5': string;
            'error-lighten-6': string;
            'error-lighten-7': string;
            'error-lighten-8': string;
            'error-readable': string;
            neutral: string;
            black: string;
            white: string;
            popperDarkBg: string;
            popperLightBg: string;
            transparent: string;
            brown900: string;
            brown800: string;
            brown700: string;
            brown600: string;
            brown500: string;
            brown400: string;
            brown300: string;
            brown200: string;
            brown100: string;
            brown50: string;
            blueGray900: string;
            blueGray800: string;
            blueGray700: string;
            blueGray600: string;
            blueGray500: string;
            blueGray400: string;
            blueGray300: string;
            blueGray200: string;
            blueGray100: string;
            blueGray50: string;
            gray900: string;
            gray800: string;
            gray700: string;
            gray600: string;
            gray500: string;
            gray400: string;
            gray300: string;
            gray200: string;
            gray100: string;
            gray50: string;
            deepOrange900: string;
            deepOrange800: string;
            deepOrange700: string;
            deepOrange600: string;
            deepOrange500: string;
            deepOrange400: string;
            deepOrange300: string;
            deepOrange200: string;
            deepOrange100: string;
            deepOrange50: string;
            orange900: string;
            orange800: string;
            orange700: string;
            orange600: string;
            orange500: string;
            orange400: string;
            orange300: string;
            orange200: string;
            orange100: string;
            orange50: string;
            amber900: string;
            amber800: string;
            amber700: string;
            amber600: string;
            amber500: string;
            amber400: string;
            amber300: string;
            amber200: string;
            amber100: string;
            amber50: string;
            yellow900: string;
            yellow800: string;
            yellow700: string;
            yellow600: string;
            yellow500: string;
            yellow400: string;
            yellow300: string;
            yellow200: string;
            yellow100: string;
            yellow50: string;
            lime900: string;
            lime800: string;
            lime700: string;
            lime600: string;
            lime500: string;
            lime400: string;
            lime300: string;
            lime200: string;
            lime100: string;
            lime50: string;
            lightGreen900: string;
            lightGreen800: string;
            lightGreen700: string;
            lightGreen600: string;
            lightGreen500: string;
            lightGreen400: string;
            lightGreen300: string;
            lightGreen200: string;
            lightGreen100: string;
            lightGreen50: string;
            green900: string;
            green800: string;
            green700: string;
            green600: string;
            green500: string;
            green400: string;
            green300: string;
            green200: string;
            green100: string;
            green50: string;
            teal900: string;
            teal800: string;
            teal700: string;
            teal600: string;
            teal500: string;
            teal400: string;
            teal300: string;
            teal200: string;
            teal100: string;
            teal50: string;
            cyan900: string;
            cyan800: string;
            cyan700: string;
            cyan600: string;
            cyan500: string;
            cyan400: string;
            cyan300: string;
            cyan200: string;
            cyan100: string;
            cyan50: string;
            blue900: string;
            blue800: string;
            blue700: string;
            blue600: string;
            blue500: string;
            blue400: string;
            blue300: string;
            blue200: string;
            blue100: string;
            blue50: string;
            indigo900: string;
            indigo800: string;
            indigo700: string;
            indigo600: string;
            indigo500: string;
            indigo400: string;
            indigo300: string;
            indigo200: string;
            indigo100: string;
            indigo50: string;
            purple900: string;
            purple800: string;
            purple700: string;
            purple600: string;
            purple500: string;
            purple400: string;
            purple300: string;
            purple200: string;
            purple100: string;
            purple50: string;
            violet900: string;
            violet800: string;
            violet700: string;
            violet600: string;
            violet500: string;
            violet400: string;
            violet300: string;
            violet200: string;
            violet100: string;
            violet50: string;
            grape900: string;
            grape800: string;
            grape700: string;
            grape600: string;
            grape500: string;
            grape400: string;
            grape300: string;
            grape200: string;
            grape100: string;
            grape50: string;
            pink900: string;
            pink800: string;
            pink700: string;
            pink600: string;
            pink500: string;
            pink400: string;
            pink300: string;
            pink200: string;
            pink100: string;
            pink50: string;
            red900: string;
            red800: string;
            red700: string;
            red600: string;
            red500: string;
            red400: string;
            red300: string;
            red200: string;
            red100: string;
            red50: string;
        };
        space: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
        };
        sizes: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
            13: string;
            14: string;
            15: string;
            16: string;
            17: string;
            18: string;
            19: string;
            20: string;
            21: string;
            22: string;
            23: string;
            24: string;
            25: string;
            26: string;
            27: string;
            28: string;
            29: string;
            30: string;
            31: string;
            32: string;
            33: string;
            34: string;
            35: string;
            36: string;
        };
        fontSizes: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            body: string;
            bodySm: string;
            caption: string;
            footnote: string;
        };
        fonts: {
            normal: string;
            mono: string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        borderWidths: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        radii: {
            xs: string;
            sm: string;
            md: string;
            base: string;
            lg: string;
            xl: string;
            squared: string;
            rounded: string;
            pill: string;
        };
        shadows: {
            default: string;
            a11y: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            10: string;
            max: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            n: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    }, import("@stitches/react/types/config").DefaultThemeMap, {
        m: (value: Stitches.PropertyValue<'margin'>) => {
            margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
        };
        mt: (value: Stitches.PropertyValue<'marginTop'>) => {
            marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
        };
        mr: (value: Stitches.PropertyValue<'marginRight'>) => {
            marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
        };
        mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
            marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
        };
        ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
        };
        mx: (value: Stitches.ScaleValue<'space'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        my: (value: Stitches.ScaleValue<'space'>) => {
            marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        p: (value: Stitches.PropertyValue<'padding'>) => {
            padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
        };
        pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
        };
        pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
            paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
        };
        pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
            paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
        };
        pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
        };
        px: (value: Stitches.ScaleValue<'space'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        py: (value: Stitches.ScaleValue<'space'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
            backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
        };
        size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
            width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
            height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        };
        linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
            backgroundImage: string;
        };
        br: (value: Stitches.PropertyValue<'borderRadius'>) => {
            borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
        };
        dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
            display: string;
            justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
            alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        };
    }>;
} : K extends `@property ${string}` ? import("@stitches/react/types/css").AtRule.Property : import("@stitches/react/types/css-util").CSS<{
    n: string;
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    dark: string;
}, {
    colors: {
        text: string;
        primary: string;
        'primary-darken-1': string;
        'primary-darken-2': string;
        'primary-darken-3': string;
        'primary-darken-4': string;
        'primary-lighten-1': string;
        'primary-lighten-2': string;
        'primary-lighten-3': string;
        'primary-lighten-4': string;
        'primary-lighten-5': string;
        'primary-lighten-6': string;
        'primary-lighten-7': string;
        'primary-lighten-8': string;
        'primary-readable': string;
        secondary: string;
        'secondary-darken-1': string;
        'secondary-darken-2': string;
        'secondary-darken-3': string;
        'secondary-darken-4': string;
        'secondary-lighten-1': string;
        'secondary-lighten-2': string;
        'secondary-lighten-3': string;
        'secondary-lighten-4': string;
        'secondary-lighten-5': string;
        'secondary-lighten-6': string;
        'secondary-lighten-7': string;
        'secondary-lighten-8': string;
        'secondary-readable': string;
        success: string;
        'success-darken-1': string;
        'success-darken-2': string;
        'success-darken-3': string;
        'success-darken-4': string;
        'success-lighten-1': string;
        'success-lighten-2': string;
        'success-lighten-3': string;
        'success-lighten-4': string;
        'success-lighten-5': string;
        'success-lighten-6': string;
        'success-lighten-7': string;
        'success-lighten-8': string;
        'success-readable': string;
        warning: string;
        'warning-darken-1': string;
        'warning-darken-2': string;
        'warning-darken-3': string;
        'warning-darken-4': string;
        'warning-lighten-1': string;
        'warning-lighten-2': string;
        'warning-lighten-3': string;
        'warning-lighten-4': string;
        'warning-lighten-5': string;
        'warning-lighten-6': string;
        'warning-lighten-7': string;
        'warning-lighten-8': string;
        'warning-readable': string;
        error: string;
        'error-darken-1': string;
        'error-darken-2': string;
        'error-darken-3': string;
        'error-darken-4': string;
        'error-lighten-1': string;
        'error-lighten-2': string;
        'error-lighten-3': string;
        'error-lighten-4': string;
        'error-lighten-5': string;
        'error-lighten-6': string;
        'error-lighten-7': string;
        'error-lighten-8': string;
        'error-readable': string;
        neutral: string;
        black: string;
        white: string;
        popperDarkBg: string;
        popperLightBg: string;
        transparent: string;
        brown900: string;
        brown800: string;
        brown700: string;
        brown600: string;
        brown500: string;
        brown400: string;
        brown300: string;
        brown200: string;
        brown100: string;
        brown50: string;
        blueGray900: string;
        blueGray800: string;
        blueGray700: string;
        blueGray600: string;
        blueGray500: string;
        blueGray400: string;
        blueGray300: string;
        blueGray200: string;
        blueGray100: string;
        blueGray50: string;
        gray900: string;
        gray800: string;
        gray700: string;
        gray600: string;
        gray500: string;
        gray400: string;
        gray300: string;
        gray200: string;
        gray100: string;
        gray50: string;
        deepOrange900: string;
        deepOrange800: string;
        deepOrange700: string;
        deepOrange600: string;
        deepOrange500: string;
        deepOrange400: string;
        deepOrange300: string;
        deepOrange200: string;
        deepOrange100: string;
        deepOrange50: string;
        orange900: string;
        orange800: string;
        orange700: string;
        orange600: string;
        orange500: string;
        orange400: string;
        orange300: string;
        orange200: string;
        orange100: string;
        orange50: string;
        amber900: string;
        amber800: string;
        amber700: string;
        amber600: string;
        amber500: string;
        amber400: string;
        amber300: string;
        amber200: string;
        amber100: string;
        amber50: string;
        yellow900: string;
        yellow800: string;
        yellow700: string;
        yellow600: string;
        yellow500: string;
        yellow400: string;
        yellow300: string;
        yellow200: string;
        yellow100: string;
        yellow50: string;
        lime900: string;
        lime800: string;
        lime700: string;
        lime600: string;
        lime500: string;
        lime400: string;
        lime300: string;
        lime200: string;
        lime100: string;
        lime50: string;
        lightGreen900: string;
        lightGreen800: string;
        lightGreen700: string;
        lightGreen600: string;
        lightGreen500: string;
        lightGreen400: string;
        lightGreen300: string;
        lightGreen200: string;
        lightGreen100: string;
        lightGreen50: string;
        green900: string;
        green800: string;
        green700: string;
        green600: string;
        green500: string;
        green400: string;
        green300: string;
        green200: string;
        green100: string;
        green50: string;
        teal900: string;
        teal800: string;
        teal700: string;
        teal600: string;
        teal500: string;
        teal400: string;
        teal300: string;
        teal200: string;
        teal100: string;
        teal50: string;
        cyan900: string;
        cyan800: string;
        cyan700: string;
        cyan600: string;
        cyan500: string;
        cyan400: string;
        cyan300: string;
        cyan200: string;
        cyan100: string;
        cyan50: string;
        blue900: string;
        blue800: string;
        blue700: string;
        blue600: string;
        blue500: string;
        blue400: string;
        blue300: string;
        blue200: string;
        blue100: string;
        blue50: string;
        indigo900: string;
        indigo800: string;
        indigo700: string;
        indigo600: string;
        indigo500: string;
        indigo400: string;
        indigo300: string;
        indigo200: string;
        indigo100: string;
        indigo50: string;
        purple900: string;
        purple800: string;
        purple700: string;
        purple600: string;
        purple500: string;
        purple400: string;
        purple300: string;
        purple200: string;
        purple100: string;
        purple50: string;
        violet900: string;
        violet800: string;
        violet700: string;
        violet600: string;
        violet500: string;
        violet400: string;
        violet300: string;
        violet200: string;
        violet100: string;
        violet50: string;
        grape900: string;
        grape800: string;
        grape700: string;
        grape600: string;
        grape500: string;
        grape400: string;
        grape300: string;
        grape200: string;
        grape100: string;
        grape50: string;
        pink900: string;
        pink800: string;
        pink700: string;
        pink600: string;
        pink500: string;
        pink400: string;
        pink300: string;
        pink200: string;
        pink100: string;
        pink50: string;
        red900: string;
        red800: string;
        red700: string;
        red600: string;
        red500: string;
        red400: string;
        red300: string;
        red200: string;
        red100: string;
        red50: string;
    };
    space: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
    };
    sizes: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
        21: string;
        22: string;
        23: string;
        24: string;
        25: string;
        26: string;
        27: string;
        28: string;
        29: string;
        30: string;
        31: string;
        32: string;
        33: string;
        34: string;
        35: string;
        36: string;
    };
    fontSizes: {
        h1: string;
        h2: string;
        h3: string;
        h4: string;
        h5: string;
        h6: string;
        body: string;
        bodySm: string;
        caption: string;
        footnote: string;
    };
    fonts: {
        normal: string;
        mono: string;
    };
    fontWeights: {
        hairline: number;
        thin: number;
        light: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        extrabold: number;
        black: number;
    };
    lineHeights: {
        n: string;
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    letterSpacings: {
        tighter: string;
        tight: string;
        normal: string;
        wide: string;
        wider: string;
        widest: string;
    };
    borderWidths: {
        light: string;
        normal: string;
        bold: string;
        extrabold: string;
        black: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        squared: string;
        rounded: string;
        pill: string;
    };
    shadows: {
        default: string;
        a11y: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        10: string;
        max: string;
    };
    transitions: {
        default: string;
    };
    breakpoints: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: Stitches.PropertyValue<'margin'>) => {
        margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
    };
    mt: (value: Stitches.PropertyValue<'marginTop'>) => {
        marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
    };
    mr: (value: Stitches.PropertyValue<'marginRight'>) => {
        marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
    };
    mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
        marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
    };
    ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
    };
    mx: (value: Stitches.ScaleValue<'space'>) => {
        marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    my: (value: Stitches.ScaleValue<'space'>) => {
        marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    p: (value: Stitches.PropertyValue<'padding'>) => {
        padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
    };
    pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
    };
    pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
        paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
    };
    pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
        paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
    };
    pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
    };
    px: (value: Stitches.ScaleValue<'space'>) => {
        paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    py: (value: Stitches.ScaleValue<'space'>) => {
        paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
    };
    bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
        backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
    };
    size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
        width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
    };
    linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
        backgroundImage: string;
    };
    br: (value: Stitches.PropertyValue<'borderRadius'>) => {
        borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
    };
    dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
        display: string;
        justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
    };
}>; })[]) => () => string;
export declare const theme: string & {
    className: string;
    selector: string;
} & {
    colors: {
        text: import("@stitches/react/types/theme").Token<"text", string, "colors", "">;
        primary: import("@stitches/react/types/theme").Token<"primary", string, "colors", "">;
        'primary-darken-1': import("@stitches/react/types/theme").Token<"primary-darken-1", string, "colors", "">;
        'primary-darken-2': import("@stitches/react/types/theme").Token<"primary-darken-2", string, "colors", "">;
        'primary-darken-3': import("@stitches/react/types/theme").Token<"primary-darken-3", string, "colors", "">;
        'primary-darken-4': import("@stitches/react/types/theme").Token<"primary-darken-4", string, "colors", "">;
        'primary-lighten-1': import("@stitches/react/types/theme").Token<"primary-lighten-1", string, "colors", "">;
        'primary-lighten-2': import("@stitches/react/types/theme").Token<"primary-lighten-2", string, "colors", "">;
        'primary-lighten-3': import("@stitches/react/types/theme").Token<"primary-lighten-3", string, "colors", "">;
        'primary-lighten-4': import("@stitches/react/types/theme").Token<"primary-lighten-4", string, "colors", "">;
        'primary-lighten-5': import("@stitches/react/types/theme").Token<"primary-lighten-5", string, "colors", "">;
        'primary-lighten-6': import("@stitches/react/types/theme").Token<"primary-lighten-6", string, "colors", "">;
        'primary-lighten-7': import("@stitches/react/types/theme").Token<"primary-lighten-7", string, "colors", "">;
        'primary-lighten-8': import("@stitches/react/types/theme").Token<"primary-lighten-8", string, "colors", "">;
        'primary-readable': import("@stitches/react/types/theme").Token<"primary-readable", string, "colors", "">;
        secondary: import("@stitches/react/types/theme").Token<"secondary", string, "colors", "">;
        'secondary-darken-1': import("@stitches/react/types/theme").Token<"secondary-darken-1", string, "colors", "">;
        'secondary-darken-2': import("@stitches/react/types/theme").Token<"secondary-darken-2", string, "colors", "">;
        'secondary-darken-3': import("@stitches/react/types/theme").Token<"secondary-darken-3", string, "colors", "">;
        'secondary-darken-4': import("@stitches/react/types/theme").Token<"secondary-darken-4", string, "colors", "">;
        'secondary-lighten-1': import("@stitches/react/types/theme").Token<"secondary-lighten-1", string, "colors", "">;
        'secondary-lighten-2': import("@stitches/react/types/theme").Token<"secondary-lighten-2", string, "colors", "">;
        'secondary-lighten-3': import("@stitches/react/types/theme").Token<"secondary-lighten-3", string, "colors", "">;
        'secondary-lighten-4': import("@stitches/react/types/theme").Token<"secondary-lighten-4", string, "colors", "">;
        'secondary-lighten-5': import("@stitches/react/types/theme").Token<"secondary-lighten-5", string, "colors", "">;
        'secondary-lighten-6': import("@stitches/react/types/theme").Token<"secondary-lighten-6", string, "colors", "">;
        'secondary-lighten-7': import("@stitches/react/types/theme").Token<"secondary-lighten-7", string, "colors", "">;
        'secondary-lighten-8': import("@stitches/react/types/theme").Token<"secondary-lighten-8", string, "colors", "">;
        'secondary-readable': import("@stitches/react/types/theme").Token<"secondary-readable", string, "colors", "">;
        success: import("@stitches/react/types/theme").Token<"success", string, "colors", "">;
        'success-darken-1': import("@stitches/react/types/theme").Token<"success-darken-1", string, "colors", "">;
        'success-darken-2': import("@stitches/react/types/theme").Token<"success-darken-2", string, "colors", "">;
        'success-darken-3': import("@stitches/react/types/theme").Token<"success-darken-3", string, "colors", "">;
        'success-darken-4': import("@stitches/react/types/theme").Token<"success-darken-4", string, "colors", "">;
        'success-lighten-1': import("@stitches/react/types/theme").Token<"success-lighten-1", string, "colors", "">;
        'success-lighten-2': import("@stitches/react/types/theme").Token<"success-lighten-2", string, "colors", "">;
        'success-lighten-3': import("@stitches/react/types/theme").Token<"success-lighten-3", string, "colors", "">;
        'success-lighten-4': import("@stitches/react/types/theme").Token<"success-lighten-4", string, "colors", "">;
        'success-lighten-5': import("@stitches/react/types/theme").Token<"success-lighten-5", string, "colors", "">;
        'success-lighten-6': import("@stitches/react/types/theme").Token<"success-lighten-6", string, "colors", "">;
        'success-lighten-7': import("@stitches/react/types/theme").Token<"success-lighten-7", string, "colors", "">;
        'success-lighten-8': import("@stitches/react/types/theme").Token<"success-lighten-8", string, "colors", "">;
        'success-readable': import("@stitches/react/types/theme").Token<"success-readable", string, "colors", "">;
        warning: import("@stitches/react/types/theme").Token<"warning", string, "colors", "">;
        'warning-darken-1': import("@stitches/react/types/theme").Token<"warning-darken-1", string, "colors", "">;
        'warning-darken-2': import("@stitches/react/types/theme").Token<"warning-darken-2", string, "colors", "">;
        'warning-darken-3': import("@stitches/react/types/theme").Token<"warning-darken-3", string, "colors", "">;
        'warning-darken-4': import("@stitches/react/types/theme").Token<"warning-darken-4", string, "colors", "">;
        'warning-lighten-1': import("@stitches/react/types/theme").Token<"warning-lighten-1", string, "colors", "">;
        'warning-lighten-2': import("@stitches/react/types/theme").Token<"warning-lighten-2", string, "colors", "">;
        'warning-lighten-3': import("@stitches/react/types/theme").Token<"warning-lighten-3", string, "colors", "">;
        'warning-lighten-4': import("@stitches/react/types/theme").Token<"warning-lighten-4", string, "colors", "">;
        'warning-lighten-5': import("@stitches/react/types/theme").Token<"warning-lighten-5", string, "colors", "">;
        'warning-lighten-6': import("@stitches/react/types/theme").Token<"warning-lighten-6", string, "colors", "">;
        'warning-lighten-7': import("@stitches/react/types/theme").Token<"warning-lighten-7", string, "colors", "">;
        'warning-lighten-8': import("@stitches/react/types/theme").Token<"warning-lighten-8", string, "colors", "">;
        'warning-readable': import("@stitches/react/types/theme").Token<"warning-readable", string, "colors", "">;
        error: import("@stitches/react/types/theme").Token<"error", string, "colors", "">;
        'error-darken-1': import("@stitches/react/types/theme").Token<"error-darken-1", string, "colors", "">;
        'error-darken-2': import("@stitches/react/types/theme").Token<"error-darken-2", string, "colors", "">;
        'error-darken-3': import("@stitches/react/types/theme").Token<"error-darken-3", string, "colors", "">;
        'error-darken-4': import("@stitches/react/types/theme").Token<"error-darken-4", string, "colors", "">;
        'error-lighten-1': import("@stitches/react/types/theme").Token<"error-lighten-1", string, "colors", "">;
        'error-lighten-2': import("@stitches/react/types/theme").Token<"error-lighten-2", string, "colors", "">;
        'error-lighten-3': import("@stitches/react/types/theme").Token<"error-lighten-3", string, "colors", "">;
        'error-lighten-4': import("@stitches/react/types/theme").Token<"error-lighten-4", string, "colors", "">;
        'error-lighten-5': import("@stitches/react/types/theme").Token<"error-lighten-5", string, "colors", "">;
        'error-lighten-6': import("@stitches/react/types/theme").Token<"error-lighten-6", string, "colors", "">;
        'error-lighten-7': import("@stitches/react/types/theme").Token<"error-lighten-7", string, "colors", "">;
        'error-lighten-8': import("@stitches/react/types/theme").Token<"error-lighten-8", string, "colors", "">;
        'error-readable': import("@stitches/react/types/theme").Token<"error-readable", string, "colors", "">;
        neutral: import("@stitches/react/types/theme").Token<"neutral", string, "colors", "">;
        black: import("@stitches/react/types/theme").Token<"black", string, "colors", "">;
        white: import("@stitches/react/types/theme").Token<"white", string, "colors", "">;
        popperDarkBg: import("@stitches/react/types/theme").Token<"popperDarkBg", string, "colors", "">;
        popperLightBg: import("@stitches/react/types/theme").Token<"popperLightBg", string, "colors", "">;
        transparent: import("@stitches/react/types/theme").Token<"transparent", string, "colors", "">;
        brown900: import("@stitches/react/types/theme").Token<"brown900", string, "colors", "">;
        brown800: import("@stitches/react/types/theme").Token<"brown800", string, "colors", "">;
        brown700: import("@stitches/react/types/theme").Token<"brown700", string, "colors", "">;
        brown600: import("@stitches/react/types/theme").Token<"brown600", string, "colors", "">;
        brown500: import("@stitches/react/types/theme").Token<"brown500", string, "colors", "">;
        brown400: import("@stitches/react/types/theme").Token<"brown400", string, "colors", "">;
        brown300: import("@stitches/react/types/theme").Token<"brown300", string, "colors", "">;
        brown200: import("@stitches/react/types/theme").Token<"brown200", string, "colors", "">;
        brown100: import("@stitches/react/types/theme").Token<"brown100", string, "colors", "">;
        brown50: import("@stitches/react/types/theme").Token<"brown50", string, "colors", "">;
        blueGray900: import("@stitches/react/types/theme").Token<"blueGray900", string, "colors", "">;
        blueGray800: import("@stitches/react/types/theme").Token<"blueGray800", string, "colors", "">;
        blueGray700: import("@stitches/react/types/theme").Token<"blueGray700", string, "colors", "">;
        blueGray600: import("@stitches/react/types/theme").Token<"blueGray600", string, "colors", "">;
        blueGray500: import("@stitches/react/types/theme").Token<"blueGray500", string, "colors", "">;
        blueGray400: import("@stitches/react/types/theme").Token<"blueGray400", string, "colors", "">;
        blueGray300: import("@stitches/react/types/theme").Token<"blueGray300", string, "colors", "">;
        blueGray200: import("@stitches/react/types/theme").Token<"blueGray200", string, "colors", "">;
        blueGray100: import("@stitches/react/types/theme").Token<"blueGray100", string, "colors", "">;
        blueGray50: import("@stitches/react/types/theme").Token<"blueGray50", string, "colors", "">;
        gray900: import("@stitches/react/types/theme").Token<"gray900", string, "colors", "">;
        gray800: import("@stitches/react/types/theme").Token<"gray800", string, "colors", "">;
        gray700: import("@stitches/react/types/theme").Token<"gray700", string, "colors", "">;
        gray600: import("@stitches/react/types/theme").Token<"gray600", string, "colors", "">;
        gray500: import("@stitches/react/types/theme").Token<"gray500", string, "colors", "">;
        gray400: import("@stitches/react/types/theme").Token<"gray400", string, "colors", "">;
        gray300: import("@stitches/react/types/theme").Token<"gray300", string, "colors", "">;
        gray200: import("@stitches/react/types/theme").Token<"gray200", string, "colors", "">;
        gray100: import("@stitches/react/types/theme").Token<"gray100", string, "colors", "">;
        gray50: import("@stitches/react/types/theme").Token<"gray50", string, "colors", "">;
        deepOrange900: import("@stitches/react/types/theme").Token<"deepOrange900", string, "colors", "">;
        deepOrange800: import("@stitches/react/types/theme").Token<"deepOrange800", string, "colors", "">;
        deepOrange700: import("@stitches/react/types/theme").Token<"deepOrange700", string, "colors", "">;
        deepOrange600: import("@stitches/react/types/theme").Token<"deepOrange600", string, "colors", "">;
        deepOrange500: import("@stitches/react/types/theme").Token<"deepOrange500", string, "colors", "">;
        deepOrange400: import("@stitches/react/types/theme").Token<"deepOrange400", string, "colors", "">;
        deepOrange300: import("@stitches/react/types/theme").Token<"deepOrange300", string, "colors", "">;
        deepOrange200: import("@stitches/react/types/theme").Token<"deepOrange200", string, "colors", "">;
        deepOrange100: import("@stitches/react/types/theme").Token<"deepOrange100", string, "colors", "">;
        deepOrange50: import("@stitches/react/types/theme").Token<"deepOrange50", string, "colors", "">;
        orange900: import("@stitches/react/types/theme").Token<"orange900", string, "colors", "">;
        orange800: import("@stitches/react/types/theme").Token<"orange800", string, "colors", "">;
        orange700: import("@stitches/react/types/theme").Token<"orange700", string, "colors", "">;
        orange600: import("@stitches/react/types/theme").Token<"orange600", string, "colors", "">;
        orange500: import("@stitches/react/types/theme").Token<"orange500", string, "colors", "">;
        orange400: import("@stitches/react/types/theme").Token<"orange400", string, "colors", "">;
        orange300: import("@stitches/react/types/theme").Token<"orange300", string, "colors", "">;
        orange200: import("@stitches/react/types/theme").Token<"orange200", string, "colors", "">;
        orange100: import("@stitches/react/types/theme").Token<"orange100", string, "colors", "">;
        orange50: import("@stitches/react/types/theme").Token<"orange50", string, "colors", "">;
        amber900: import("@stitches/react/types/theme").Token<"amber900", string, "colors", "">;
        amber800: import("@stitches/react/types/theme").Token<"amber800", string, "colors", "">;
        amber700: import("@stitches/react/types/theme").Token<"amber700", string, "colors", "">;
        amber600: import("@stitches/react/types/theme").Token<"amber600", string, "colors", "">;
        amber500: import("@stitches/react/types/theme").Token<"amber500", string, "colors", "">;
        amber400: import("@stitches/react/types/theme").Token<"amber400", string, "colors", "">;
        amber300: import("@stitches/react/types/theme").Token<"amber300", string, "colors", "">;
        amber200: import("@stitches/react/types/theme").Token<"amber200", string, "colors", "">;
        amber100: import("@stitches/react/types/theme").Token<"amber100", string, "colors", "">;
        amber50: import("@stitches/react/types/theme").Token<"amber50", string, "colors", "">;
        yellow900: import("@stitches/react/types/theme").Token<"yellow900", string, "colors", "">;
        yellow800: import("@stitches/react/types/theme").Token<"yellow800", string, "colors", "">;
        yellow700: import("@stitches/react/types/theme").Token<"yellow700", string, "colors", "">;
        yellow600: import("@stitches/react/types/theme").Token<"yellow600", string, "colors", "">;
        yellow500: import("@stitches/react/types/theme").Token<"yellow500", string, "colors", "">;
        yellow400: import("@stitches/react/types/theme").Token<"yellow400", string, "colors", "">;
        yellow300: import("@stitches/react/types/theme").Token<"yellow300", string, "colors", "">;
        yellow200: import("@stitches/react/types/theme").Token<"yellow200", string, "colors", "">;
        yellow100: import("@stitches/react/types/theme").Token<"yellow100", string, "colors", "">;
        yellow50: import("@stitches/react/types/theme").Token<"yellow50", string, "colors", "">;
        lime900: import("@stitches/react/types/theme").Token<"lime900", string, "colors", "">;
        lime800: import("@stitches/react/types/theme").Token<"lime800", string, "colors", "">;
        lime700: import("@stitches/react/types/theme").Token<"lime700", string, "colors", "">;
        lime600: import("@stitches/react/types/theme").Token<"lime600", string, "colors", "">;
        lime500: import("@stitches/react/types/theme").Token<"lime500", string, "colors", "">;
        lime400: import("@stitches/react/types/theme").Token<"lime400", string, "colors", "">;
        lime300: import("@stitches/react/types/theme").Token<"lime300", string, "colors", "">;
        lime200: import("@stitches/react/types/theme").Token<"lime200", string, "colors", "">;
        lime100: import("@stitches/react/types/theme").Token<"lime100", string, "colors", "">;
        lime50: import("@stitches/react/types/theme").Token<"lime50", string, "colors", "">;
        lightGreen900: import("@stitches/react/types/theme").Token<"lightGreen900", string, "colors", "">;
        lightGreen800: import("@stitches/react/types/theme").Token<"lightGreen800", string, "colors", "">;
        lightGreen700: import("@stitches/react/types/theme").Token<"lightGreen700", string, "colors", "">;
        lightGreen600: import("@stitches/react/types/theme").Token<"lightGreen600", string, "colors", "">;
        lightGreen500: import("@stitches/react/types/theme").Token<"lightGreen500", string, "colors", "">;
        lightGreen400: import("@stitches/react/types/theme").Token<"lightGreen400", string, "colors", "">;
        lightGreen300: import("@stitches/react/types/theme").Token<"lightGreen300", string, "colors", "">;
        lightGreen200: import("@stitches/react/types/theme").Token<"lightGreen200", string, "colors", "">;
        lightGreen100: import("@stitches/react/types/theme").Token<"lightGreen100", string, "colors", "">;
        lightGreen50: import("@stitches/react/types/theme").Token<"lightGreen50", string, "colors", "">;
        green900: import("@stitches/react/types/theme").Token<"green900", string, "colors", "">;
        green800: import("@stitches/react/types/theme").Token<"green800", string, "colors", "">;
        green700: import("@stitches/react/types/theme").Token<"green700", string, "colors", "">;
        green600: import("@stitches/react/types/theme").Token<"green600", string, "colors", "">;
        green500: import("@stitches/react/types/theme").Token<"green500", string, "colors", "">;
        green400: import("@stitches/react/types/theme").Token<"green400", string, "colors", "">;
        green300: import("@stitches/react/types/theme").Token<"green300", string, "colors", "">;
        green200: import("@stitches/react/types/theme").Token<"green200", string, "colors", "">;
        green100: import("@stitches/react/types/theme").Token<"green100", string, "colors", "">;
        green50: import("@stitches/react/types/theme").Token<"green50", string, "colors", "">;
        teal900: import("@stitches/react/types/theme").Token<"teal900", string, "colors", "">;
        teal800: import("@stitches/react/types/theme").Token<"teal800", string, "colors", "">;
        teal700: import("@stitches/react/types/theme").Token<"teal700", string, "colors", "">;
        teal600: import("@stitches/react/types/theme").Token<"teal600", string, "colors", "">;
        teal500: import("@stitches/react/types/theme").Token<"teal500", string, "colors", "">;
        teal400: import("@stitches/react/types/theme").Token<"teal400", string, "colors", "">;
        teal300: import("@stitches/react/types/theme").Token<"teal300", string, "colors", "">;
        teal200: import("@stitches/react/types/theme").Token<"teal200", string, "colors", "">;
        teal100: import("@stitches/react/types/theme").Token<"teal100", string, "colors", "">;
        teal50: import("@stitches/react/types/theme").Token<"teal50", string, "colors", "">;
        cyan900: import("@stitches/react/types/theme").Token<"cyan900", string, "colors", "">;
        cyan800: import("@stitches/react/types/theme").Token<"cyan800", string, "colors", "">;
        cyan700: import("@stitches/react/types/theme").Token<"cyan700", string, "colors", "">;
        cyan600: import("@stitches/react/types/theme").Token<"cyan600", string, "colors", "">;
        cyan500: import("@stitches/react/types/theme").Token<"cyan500", string, "colors", "">;
        cyan400: import("@stitches/react/types/theme").Token<"cyan400", string, "colors", "">;
        cyan300: import("@stitches/react/types/theme").Token<"cyan300", string, "colors", "">;
        cyan200: import("@stitches/react/types/theme").Token<"cyan200", string, "colors", "">;
        cyan100: import("@stitches/react/types/theme").Token<"cyan100", string, "colors", "">;
        cyan50: import("@stitches/react/types/theme").Token<"cyan50", string, "colors", "">;
        blue900: import("@stitches/react/types/theme").Token<"blue900", string, "colors", "">;
        blue800: import("@stitches/react/types/theme").Token<"blue800", string, "colors", "">;
        blue700: import("@stitches/react/types/theme").Token<"blue700", string, "colors", "">;
        blue600: import("@stitches/react/types/theme").Token<"blue600", string, "colors", "">;
        blue500: import("@stitches/react/types/theme").Token<"blue500", string, "colors", "">;
        blue400: import("@stitches/react/types/theme").Token<"blue400", string, "colors", "">;
        blue300: import("@stitches/react/types/theme").Token<"blue300", string, "colors", "">;
        blue200: import("@stitches/react/types/theme").Token<"blue200", string, "colors", "">;
        blue100: import("@stitches/react/types/theme").Token<"blue100", string, "colors", "">;
        blue50: import("@stitches/react/types/theme").Token<"blue50", string, "colors", "">;
        indigo900: import("@stitches/react/types/theme").Token<"indigo900", string, "colors", "">;
        indigo800: import("@stitches/react/types/theme").Token<"indigo800", string, "colors", "">;
        indigo700: import("@stitches/react/types/theme").Token<"indigo700", string, "colors", "">;
        indigo600: import("@stitches/react/types/theme").Token<"indigo600", string, "colors", "">;
        indigo500: import("@stitches/react/types/theme").Token<"indigo500", string, "colors", "">;
        indigo400: import("@stitches/react/types/theme").Token<"indigo400", string, "colors", "">;
        indigo300: import("@stitches/react/types/theme").Token<"indigo300", string, "colors", "">;
        indigo200: import("@stitches/react/types/theme").Token<"indigo200", string, "colors", "">;
        indigo100: import("@stitches/react/types/theme").Token<"indigo100", string, "colors", "">;
        indigo50: import("@stitches/react/types/theme").Token<"indigo50", string, "colors", "">;
        purple900: import("@stitches/react/types/theme").Token<"purple900", string, "colors", "">;
        purple800: import("@stitches/react/types/theme").Token<"purple800", string, "colors", "">;
        purple700: import("@stitches/react/types/theme").Token<"purple700", string, "colors", "">;
        purple600: import("@stitches/react/types/theme").Token<"purple600", string, "colors", "">;
        purple500: import("@stitches/react/types/theme").Token<"purple500", string, "colors", "">;
        purple400: import("@stitches/react/types/theme").Token<"purple400", string, "colors", "">;
        purple300: import("@stitches/react/types/theme").Token<"purple300", string, "colors", "">;
        purple200: import("@stitches/react/types/theme").Token<"purple200", string, "colors", "">;
        purple100: import("@stitches/react/types/theme").Token<"purple100", string, "colors", "">;
        purple50: import("@stitches/react/types/theme").Token<"purple50", string, "colors", "">;
        violet900: import("@stitches/react/types/theme").Token<"violet900", string, "colors", "">;
        violet800: import("@stitches/react/types/theme").Token<"violet800", string, "colors", "">;
        violet700: import("@stitches/react/types/theme").Token<"violet700", string, "colors", "">;
        violet600: import("@stitches/react/types/theme").Token<"violet600", string, "colors", "">;
        violet500: import("@stitches/react/types/theme").Token<"violet500", string, "colors", "">;
        violet400: import("@stitches/react/types/theme").Token<"violet400", string, "colors", "">;
        violet300: import("@stitches/react/types/theme").Token<"violet300", string, "colors", "">;
        violet200: import("@stitches/react/types/theme").Token<"violet200", string, "colors", "">;
        violet100: import("@stitches/react/types/theme").Token<"violet100", string, "colors", "">;
        violet50: import("@stitches/react/types/theme").Token<"violet50", string, "colors", "">;
        grape900: import("@stitches/react/types/theme").Token<"grape900", string, "colors", "">;
        grape800: import("@stitches/react/types/theme").Token<"grape800", string, "colors", "">;
        grape700: import("@stitches/react/types/theme").Token<"grape700", string, "colors", "">;
        grape600: import("@stitches/react/types/theme").Token<"grape600", string, "colors", "">;
        grape500: import("@stitches/react/types/theme").Token<"grape500", string, "colors", "">;
        grape400: import("@stitches/react/types/theme").Token<"grape400", string, "colors", "">;
        grape300: import("@stitches/react/types/theme").Token<"grape300", string, "colors", "">;
        grape200: import("@stitches/react/types/theme").Token<"grape200", string, "colors", "">;
        grape100: import("@stitches/react/types/theme").Token<"grape100", string, "colors", "">;
        grape50: import("@stitches/react/types/theme").Token<"grape50", string, "colors", "">;
        pink900: import("@stitches/react/types/theme").Token<"pink900", string, "colors", "">;
        pink800: import("@stitches/react/types/theme").Token<"pink800", string, "colors", "">;
        pink700: import("@stitches/react/types/theme").Token<"pink700", string, "colors", "">;
        pink600: import("@stitches/react/types/theme").Token<"pink600", string, "colors", "">;
        pink500: import("@stitches/react/types/theme").Token<"pink500", string, "colors", "">;
        pink400: import("@stitches/react/types/theme").Token<"pink400", string, "colors", "">;
        pink300: import("@stitches/react/types/theme").Token<"pink300", string, "colors", "">;
        pink200: import("@stitches/react/types/theme").Token<"pink200", string, "colors", "">;
        pink100: import("@stitches/react/types/theme").Token<"pink100", string, "colors", "">;
        pink50: import("@stitches/react/types/theme").Token<"pink50", string, "colors", "">;
        red900: import("@stitches/react/types/theme").Token<"red900", string, "colors", "">;
        red800: import("@stitches/react/types/theme").Token<"red800", string, "colors", "">;
        red700: import("@stitches/react/types/theme").Token<"red700", string, "colors", "">;
        red600: import("@stitches/react/types/theme").Token<"red600", string, "colors", "">;
        red500: import("@stitches/react/types/theme").Token<"red500", string, "colors", "">;
        red400: import("@stitches/react/types/theme").Token<"red400", string, "colors", "">;
        red300: import("@stitches/react/types/theme").Token<"red300", string, "colors", "">;
        red200: import("@stitches/react/types/theme").Token<"red200", string, "colors", "">;
        red100: import("@stitches/react/types/theme").Token<"red100", string, "colors", "">;
        red50: import("@stitches/react/types/theme").Token<"red50", string, "colors", "">;
    };
    space: {
        n: import("@stitches/react/types/theme").Token<"n", string, "space", "">;
        0: import("@stitches/react/types/theme").Token<"0", string, "space", "">;
        1: import("@stitches/react/types/theme").Token<"1", string, "space", "">;
        2: import("@stitches/react/types/theme").Token<"2", string, "space", "">;
        3: import("@stitches/react/types/theme").Token<"3", string, "space", "">;
        4: import("@stitches/react/types/theme").Token<"4", string, "space", "">;
        5: import("@stitches/react/types/theme").Token<"5", string, "space", "">;
        6: import("@stitches/react/types/theme").Token<"6", string, "space", "">;
        7: import("@stitches/react/types/theme").Token<"7", string, "space", "">;
        8: import("@stitches/react/types/theme").Token<"8", string, "space", "">;
        9: import("@stitches/react/types/theme").Token<"9", string, "space", "">;
    };
    sizes: {
        n: import("@stitches/react/types/theme").Token<"n", string, "sizes", "">;
        0: import("@stitches/react/types/theme").Token<"0", string, "sizes", "">;
        1: import("@stitches/react/types/theme").Token<"1", string, "sizes", "">;
        2: import("@stitches/react/types/theme").Token<"2", string, "sizes", "">;
        3: import("@stitches/react/types/theme").Token<"3", string, "sizes", "">;
        4: import("@stitches/react/types/theme").Token<"4", string, "sizes", "">;
        5: import("@stitches/react/types/theme").Token<"5", string, "sizes", "">;
        6: import("@stitches/react/types/theme").Token<"6", string, "sizes", "">;
        7: import("@stitches/react/types/theme").Token<"7", string, "sizes", "">;
        8: import("@stitches/react/types/theme").Token<"8", string, "sizes", "">;
        9: import("@stitches/react/types/theme").Token<"9", string, "sizes", "">;
        10: import("@stitches/react/types/theme").Token<"10", string, "sizes", "">;
        11: import("@stitches/react/types/theme").Token<"11", string, "sizes", "">;
        12: import("@stitches/react/types/theme").Token<"12", string, "sizes", "">;
        13: import("@stitches/react/types/theme").Token<"13", string, "sizes", "">;
        14: import("@stitches/react/types/theme").Token<"14", string, "sizes", "">;
        15: import("@stitches/react/types/theme").Token<"15", string, "sizes", "">;
        16: import("@stitches/react/types/theme").Token<"16", string, "sizes", "">;
        17: import("@stitches/react/types/theme").Token<"17", string, "sizes", "">;
        18: import("@stitches/react/types/theme").Token<"18", string, "sizes", "">;
        19: import("@stitches/react/types/theme").Token<"19", string, "sizes", "">;
        20: import("@stitches/react/types/theme").Token<"20", string, "sizes", "">;
        21: import("@stitches/react/types/theme").Token<"21", string, "sizes", "">;
        22: import("@stitches/react/types/theme").Token<"22", string, "sizes", "">;
        23: import("@stitches/react/types/theme").Token<"23", string, "sizes", "">;
        24: import("@stitches/react/types/theme").Token<"24", string, "sizes", "">;
        25: import("@stitches/react/types/theme").Token<"25", string, "sizes", "">;
        26: import("@stitches/react/types/theme").Token<"26", string, "sizes", "">;
        27: import("@stitches/react/types/theme").Token<"27", string, "sizes", "">;
        28: import("@stitches/react/types/theme").Token<"28", string, "sizes", "">;
        29: import("@stitches/react/types/theme").Token<"29", string, "sizes", "">;
        30: import("@stitches/react/types/theme").Token<"30", string, "sizes", "">;
        31: import("@stitches/react/types/theme").Token<"31", string, "sizes", "">;
        32: import("@stitches/react/types/theme").Token<"32", string, "sizes", "">;
        33: import("@stitches/react/types/theme").Token<"33", string, "sizes", "">;
        34: import("@stitches/react/types/theme").Token<"34", string, "sizes", "">;
        35: import("@stitches/react/types/theme").Token<"35", string, "sizes", "">;
        36: import("@stitches/react/types/theme").Token<"36", string, "sizes", "">;
    };
    fontSizes: {
        h1: import("@stitches/react/types/theme").Token<"h1", string, "fontSizes", "">;
        h2: import("@stitches/react/types/theme").Token<"h2", string, "fontSizes", "">;
        h3: import("@stitches/react/types/theme").Token<"h3", string, "fontSizes", "">;
        h4: import("@stitches/react/types/theme").Token<"h4", string, "fontSizes", "">;
        h5: import("@stitches/react/types/theme").Token<"h5", string, "fontSizes", "">;
        h6: import("@stitches/react/types/theme").Token<"h6", string, "fontSizes", "">;
        body: import("@stitches/react/types/theme").Token<"body", string, "fontSizes", "">;
        bodySm: import("@stitches/react/types/theme").Token<"bodySm", string, "fontSizes", "">;
        caption: import("@stitches/react/types/theme").Token<"caption", string, "fontSizes", "">;
        footnote: import("@stitches/react/types/theme").Token<"footnote", string, "fontSizes", "">;
    };
    fonts: {
        normal: import("@stitches/react/types/theme").Token<"normal", string, "fonts", "">;
        mono: import("@stitches/react/types/theme").Token<"mono", string, "fonts", "">;
    };
    fontWeights: {
        hairline: import("@stitches/react/types/theme").Token<"hairline", string, "fontWeights", "">;
        thin: import("@stitches/react/types/theme").Token<"thin", string, "fontWeights", "">;
        light: import("@stitches/react/types/theme").Token<"light", string, "fontWeights", "">;
        normal: import("@stitches/react/types/theme").Token<"normal", string, "fontWeights", "">;
        medium: import("@stitches/react/types/theme").Token<"medium", string, "fontWeights", "">;
        semibold: import("@stitches/react/types/theme").Token<"semibold", string, "fontWeights", "">;
        bold: import("@stitches/react/types/theme").Token<"bold", string, "fontWeights", "">;
        extrabold: import("@stitches/react/types/theme").Token<"extrabold", string, "fontWeights", "">;
        black: import("@stitches/react/types/theme").Token<"black", string, "fontWeights", "">;
    };
    lineHeights: {
        n: import("@stitches/react/types/theme").Token<"n", string, "lineHeights", "">;
        0: import("@stitches/react/types/theme").Token<"0", string, "lineHeights", "">;
        1: import("@stitches/react/types/theme").Token<"1", string, "lineHeights", "">;
        2: import("@stitches/react/types/theme").Token<"2", string, "lineHeights", "">;
        3: import("@stitches/react/types/theme").Token<"3", string, "lineHeights", "">;
        4: import("@stitches/react/types/theme").Token<"4", string, "lineHeights", "">;
        5: import("@stitches/react/types/theme").Token<"5", string, "lineHeights", "">;
        6: import("@stitches/react/types/theme").Token<"6", string, "lineHeights", "">;
    };
    letterSpacings: {
        tighter: import("@stitches/react/types/theme").Token<"tighter", string, "letterSpacings", "">;
        tight: import("@stitches/react/types/theme").Token<"tight", string, "letterSpacings", "">;
        normal: import("@stitches/react/types/theme").Token<"normal", string, "letterSpacings", "">;
        wide: import("@stitches/react/types/theme").Token<"wide", string, "letterSpacings", "">;
        wider: import("@stitches/react/types/theme").Token<"wider", string, "letterSpacings", "">;
        widest: import("@stitches/react/types/theme").Token<"widest", string, "letterSpacings", "">;
    };
    borderWidths: {
        light: import("@stitches/react/types/theme").Token<"light", string, "borderWidths", "">;
        normal: import("@stitches/react/types/theme").Token<"normal", string, "borderWidths", "">;
        bold: import("@stitches/react/types/theme").Token<"bold", string, "borderWidths", "">;
        extrabold: import("@stitches/react/types/theme").Token<"extrabold", string, "borderWidths", "">;
        black: import("@stitches/react/types/theme").Token<"black", string, "borderWidths", "">;
    };
    radii: {
        xs: import("@stitches/react/types/theme").Token<"xs", string, "radii", "">;
        sm: import("@stitches/react/types/theme").Token<"sm", string, "radii", "">;
        md: import("@stitches/react/types/theme").Token<"md", string, "radii", "">;
        base: import("@stitches/react/types/theme").Token<"base", string, "radii", "">;
        lg: import("@stitches/react/types/theme").Token<"lg", string, "radii", "">;
        xl: import("@stitches/react/types/theme").Token<"xl", string, "radii", "">;
        squared: import("@stitches/react/types/theme").Token<"squared", string, "radii", "">;
        rounded: import("@stitches/react/types/theme").Token<"rounded", string, "radii", "">;
        pill: import("@stitches/react/types/theme").Token<"pill", string, "radii", "">;
    };
    shadows: {
        default: import("@stitches/react/types/theme").Token<"default", string, "shadows", "">;
        a11y: import("@stitches/react/types/theme").Token<"a11y", string, "shadows", "">;
    };
    zIndices: {
        1: import("@stitches/react/types/theme").Token<"1", string, "zIndices", "">;
        2: import("@stitches/react/types/theme").Token<"2", string, "zIndices", "">;
        3: import("@stitches/react/types/theme").Token<"3", string, "zIndices", "">;
        4: import("@stitches/react/types/theme").Token<"4", string, "zIndices", "">;
        5: import("@stitches/react/types/theme").Token<"5", string, "zIndices", "">;
        10: import("@stitches/react/types/theme").Token<"10", string, "zIndices", "">;
        max: import("@stitches/react/types/theme").Token<"max", string, "zIndices", "">;
    };
    transitions: {
        default: import("@stitches/react/types/theme").Token<"default", string, "transitions", "">;
    };
    breakpoints: {
        n: import("@stitches/react/types/theme").Token<"n", string, "breakpoints", "">;
        xs: import("@stitches/react/types/theme").Token<"xs", string, "breakpoints", "">;
        sm: import("@stitches/react/types/theme").Token<"sm", string, "breakpoints", "">;
        md: import("@stitches/react/types/theme").Token<"md", string, "breakpoints", "">;
        lg: import("@stitches/react/types/theme").Token<"lg", string, "breakpoints", "">;
        xl: import("@stitches/react/types/theme").Token<"xl", string, "breakpoints", "">;
    };
};
export declare const config: {
    prefix: "";
    media: {
        n: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xsMax: string;
        smMax: string;
        mdMax: string;
        lgMax: string;
        xlMax: string;
        dark: string;
    };
    theme: {
        colors: {
            text: string;
            primary: string;
            'primary-darken-1': string;
            'primary-darken-2': string;
            'primary-darken-3': string;
            'primary-darken-4': string;
            'primary-lighten-1': string;
            'primary-lighten-2': string;
            'primary-lighten-3': string;
            'primary-lighten-4': string;
            'primary-lighten-5': string;
            'primary-lighten-6': string;
            'primary-lighten-7': string;
            'primary-lighten-8': string;
            'primary-readable': string;
            secondary: string;
            'secondary-darken-1': string;
            'secondary-darken-2': string;
            'secondary-darken-3': string;
            'secondary-darken-4': string;
            'secondary-lighten-1': string;
            'secondary-lighten-2': string;
            'secondary-lighten-3': string;
            'secondary-lighten-4': string;
            'secondary-lighten-5': string;
            'secondary-lighten-6': string;
            'secondary-lighten-7': string;
            'secondary-lighten-8': string;
            'secondary-readable': string;
            success: string;
            'success-darken-1': string;
            'success-darken-2': string;
            'success-darken-3': string;
            'success-darken-4': string;
            'success-lighten-1': string;
            'success-lighten-2': string;
            'success-lighten-3': string;
            'success-lighten-4': string;
            'success-lighten-5': string;
            'success-lighten-6': string;
            'success-lighten-7': string;
            'success-lighten-8': string;
            'success-readable': string;
            warning: string;
            'warning-darken-1': string;
            'warning-darken-2': string;
            'warning-darken-3': string;
            'warning-darken-4': string;
            'warning-lighten-1': string;
            'warning-lighten-2': string;
            'warning-lighten-3': string;
            'warning-lighten-4': string;
            'warning-lighten-5': string;
            'warning-lighten-6': string;
            'warning-lighten-7': string;
            'warning-lighten-8': string;
            'warning-readable': string;
            error: string;
            'error-darken-1': string;
            'error-darken-2': string;
            'error-darken-3': string;
            'error-darken-4': string;
            'error-lighten-1': string;
            'error-lighten-2': string;
            'error-lighten-3': string;
            'error-lighten-4': string;
            'error-lighten-5': string;
            'error-lighten-6': string;
            'error-lighten-7': string;
            'error-lighten-8': string;
            'error-readable': string;
            neutral: string;
            black: string;
            white: string;
            popperDarkBg: string;
            popperLightBg: string;
            transparent: string;
            brown900: string;
            brown800: string;
            brown700: string;
            brown600: string;
            brown500: string;
            brown400: string;
            brown300: string;
            brown200: string;
            brown100: string;
            brown50: string;
            blueGray900: string;
            blueGray800: string;
            blueGray700: string;
            blueGray600: string;
            blueGray500: string;
            blueGray400: string;
            blueGray300: string;
            blueGray200: string;
            blueGray100: string;
            blueGray50: string;
            gray900: string;
            gray800: string;
            gray700: string;
            gray600: string;
            gray500: string;
            gray400: string;
            gray300: string;
            gray200: string;
            gray100: string;
            gray50: string;
            deepOrange900: string;
            deepOrange800: string;
            deepOrange700: string;
            deepOrange600: string;
            deepOrange500: string;
            deepOrange400: string;
            deepOrange300: string;
            deepOrange200: string;
            deepOrange100: string;
            deepOrange50: string;
            orange900: string;
            orange800: string;
            orange700: string;
            orange600: string;
            orange500: string;
            orange400: string;
            orange300: string;
            orange200: string;
            orange100: string;
            orange50: string;
            amber900: string;
            amber800: string;
            amber700: string;
            amber600: string;
            amber500: string;
            amber400: string;
            amber300: string;
            amber200: string;
            amber100: string;
            amber50: string;
            yellow900: string;
            yellow800: string;
            yellow700: string;
            yellow600: string;
            yellow500: string;
            yellow400: string;
            yellow300: string;
            yellow200: string;
            yellow100: string;
            yellow50: string;
            lime900: string;
            lime800: string;
            lime700: string;
            lime600: string;
            lime500: string;
            lime400: string;
            lime300: string;
            lime200: string;
            lime100: string;
            lime50: string;
            lightGreen900: string;
            lightGreen800: string;
            lightGreen700: string;
            lightGreen600: string;
            lightGreen500: string;
            lightGreen400: string;
            lightGreen300: string;
            lightGreen200: string;
            lightGreen100: string;
            lightGreen50: string;
            green900: string;
            green800: string;
            green700: string;
            green600: string;
            green500: string;
            green400: string;
            green300: string;
            green200: string;
            green100: string;
            green50: string;
            teal900: string;
            teal800: string;
            teal700: string;
            teal600: string;
            teal500: string;
            teal400: string;
            teal300: string;
            teal200: string;
            teal100: string;
            teal50: string;
            cyan900: string;
            cyan800: string;
            cyan700: string;
            cyan600: string;
            cyan500: string;
            cyan400: string;
            cyan300: string;
            cyan200: string;
            cyan100: string;
            cyan50: string;
            blue900: string;
            blue800: string;
            blue700: string;
            blue600: string;
            blue500: string;
            blue400: string;
            blue300: string;
            blue200: string;
            blue100: string;
            blue50: string;
            indigo900: string;
            indigo800: string;
            indigo700: string;
            indigo600: string;
            indigo500: string;
            indigo400: string;
            indigo300: string;
            indigo200: string;
            indigo100: string;
            indigo50: string;
            purple900: string;
            purple800: string;
            purple700: string;
            purple600: string;
            purple500: string;
            purple400: string;
            purple300: string;
            purple200: string;
            purple100: string;
            purple50: string;
            violet900: string;
            violet800: string;
            violet700: string;
            violet600: string;
            violet500: string;
            violet400: string;
            violet300: string;
            violet200: string;
            violet100: string;
            violet50: string;
            grape900: string;
            grape800: string;
            grape700: string;
            grape600: string;
            grape500: string;
            grape400: string;
            grape300: string;
            grape200: string;
            grape100: string;
            grape50: string;
            pink900: string;
            pink800: string;
            pink700: string;
            pink600: string;
            pink500: string;
            pink400: string;
            pink300: string;
            pink200: string;
            pink100: string;
            pink50: string;
            red900: string;
            red800: string;
            red700: string;
            red600: string;
            red500: string;
            red400: string;
            red300: string;
            red200: string;
            red100: string;
            red50: string;
        };
        space: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
        };
        sizes: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
            13: string;
            14: string;
            15: string;
            16: string;
            17: string;
            18: string;
            19: string;
            20: string;
            21: string;
            22: string;
            23: string;
            24: string;
            25: string;
            26: string;
            27: string;
            28: string;
            29: string;
            30: string;
            31: string;
            32: string;
            33: string;
            34: string;
            35: string;
            36: string;
        };
        fontSizes: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            body: string;
            bodySm: string;
            caption: string;
            footnote: string;
        };
        fonts: {
            normal: string;
            mono: string;
        };
        fontWeights: {
            hairline: number;
            thin: number;
            light: number;
            normal: number;
            medium: number;
            semibold: number;
            bold: number;
            extrabold: number;
            black: number;
        };
        lineHeights: {
            n: string;
            0: string;
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
        };
        letterSpacings: {
            tighter: string;
            tight: string;
            normal: string;
            wide: string;
            wider: string;
            widest: string;
        };
        borderWidths: {
            light: string;
            normal: string;
            bold: string;
            extrabold: string;
            black: string;
        };
        radii: {
            xs: string;
            sm: string;
            md: string;
            base: string;
            lg: string;
            xl: string;
            squared: string;
            rounded: string;
            pill: string;
        };
        shadows: {
            default: string;
            a11y: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            10: string;
            max: string;
        };
        transitions: {
            default: string;
        };
        breakpoints: {
            n: string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    themeMap: import("@stitches/react/types/config").DefaultThemeMap;
    utils: {
        m: (value: Stitches.PropertyValue<'margin'>) => {
            margin: import("@stitches/react/types/css-util").WithPropertyValue<"margin">;
        };
        mt: (value: Stitches.PropertyValue<'marginTop'>) => {
            marginTop: import("@stitches/react/types/css-util").WithPropertyValue<"marginTop">;
        };
        mr: (value: Stitches.PropertyValue<'marginRight'>) => {
            marginRight: import("@stitches/react/types/css-util").WithPropertyValue<"marginRight">;
        };
        mb: (value: Stitches.PropertyValue<'marginBottom'>) => {
            marginBottom: import("@stitches/react/types/css-util").WithPropertyValue<"marginBottom">;
        };
        ml: (value: Stitches.PropertyValue<'marginLeft'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithPropertyValue<"marginLeft">;
        };
        mx: (value: Stitches.ScaleValue<'space'>) => {
            marginLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        my: (value: Stitches.ScaleValue<'space'>) => {
            marginTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            marginBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        p: (value: Stitches.PropertyValue<'padding'>) => {
            padding: import("@stitches/react/types/css-util").WithPropertyValue<"padding">;
        };
        pt: (value: Stitches.PropertyValue<'paddingTop'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithPropertyValue<"paddingTop">;
        };
        pr: (value: Stitches.PropertyValue<'paddingRight'>) => {
            paddingRight: import("@stitches/react/types/css-util").WithPropertyValue<"paddingRight">;
        };
        pb: (value: Stitches.PropertyValue<'paddingBottom'>) => {
            paddingBottom: import("@stitches/react/types/css-util").WithPropertyValue<"paddingBottom">;
        };
        pl: (value: Stitches.PropertyValue<'paddingLeft'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithPropertyValue<"paddingLeft">;
        };
        px: (value: Stitches.ScaleValue<'space'>) => {
            paddingLeft: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingRight: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        py: (value: Stitches.ScaleValue<'space'>) => {
            paddingTop: import("@stitches/react/types/css-util").WithScaleValue<"space">;
            paddingBottom: import("@stitches/react/types/css-util").WithScaleValue<"space">;
        };
        bg: (value: Stitches.PropertyValue<'backgroundColor'>) => {
            backgroundColor: import("@stitches/react/types/css-util").WithPropertyValue<"backgroundColor">;
        };
        size: (value: Stitches.PropertyValue<'width' | 'height'>) => {
            width: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
            height: import("@stitches/react/types/css-util").WithPropertyValue<"height" | "width">;
        };
        linearGradient: (value: Stitches.PropertyValue<'backgroundImage'>) => {
            backgroundImage: string;
        };
        br: (value: Stitches.PropertyValue<'borderRadius'>) => {
            borderRadius: import("@stitches/react/types/css-util").WithPropertyValue<"borderRadius">;
        };
        dflex: (value: Stitches.PropertyValue<'justifyContent'>) => {
            display: string;
            justifyContent: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
            alignItems: import("@stitches/react/types/css-util").WithPropertyValue<"justifyContent">;
        };
    };
};
export declare const getCssText: () => string;
export declare type CSS = Stitches.CSS<typeof config>;
export declare type StitchesTheme = typeof theme;
export declare type StandardColors = 'primary' | 'secondary' | 'success' | 'warning' | 'error';
export declare type AllColors = keyof typeof theme.colors;
export declare const standardColors: Array<StandardColors>;
